.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RayCast2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RayCast2D:

RayCast2D
=========

**Inherits:** :ref:`Node2D<class_node2d>` **<** :ref:`CanvasItem<class_canvasitem>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Query the closest object intersecting a ray.

Member Functions
----------------

+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`add_exception<class_RayCast2D_add_exception>` **(** :ref:`Object<class_object>` node **)**                                           |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`add_exception_rid<class_RayCast2D_add_exception_rid>` **(** :ref:`RID<class_rid>` rid **)**                                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`clear_exceptions<class_RayCast2D_clear_exceptions>` **(** **)**                                                                      |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`force_raycast_update<class_RayCast2D_force_raycast_update>` **(** **)**                                                              |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_object>`    | :ref:`get_collider<class_RayCast2D_get_collider>` **(** **)** const                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_collider_shape<class_RayCast2D_get_collider_shape>` **(** **)** const                                                            |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`get_collision_mask_bit<class_RayCast2D_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** const                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_collision_normal<class_RayCast2D_get_collision_normal>` **(** **)** const                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_collision_point<class_RayCast2D_get_collision_point>` **(** **)** const                                                          |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_colliding<class_RayCast2D_is_colliding>` **(** **)** const                                                                        |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`remove_exception<class_RayCast2D_remove_exception>` **(** :ref:`Object<class_object>` node **)**                                     |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`remove_exception_rid<class_RayCast2D_remove_exception_rid>` **(** :ref:`RID<class_rid>` rid **)**                                    |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_collision_mask_bit<class_RayCast2D_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)** |
+--------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_RayCast2D_cast_to:

- :ref:`Vector2<class_vector2>` **cast_to** - The ray's destination point, relative to the RayCast's ``position``.

  .. _class_RayCast2D_collision_mask:

- :ref:`int<class_int>` **collision_mask** - The ray's collision mask. Only objects in at least one collision layer enabled in the mask will be detected.

  .. _class_RayCast2D_enabled:

- :ref:`bool<class_bool>` **enabled** - If ``true``, collisions will be reported. Default value: ``false``.

  .. _class_RayCast2D_exclude_parent:

- :ref:`bool<class_bool>` **exclude_parent** - If ``true``, the parent node will be excluded from collision detection. Default value: ``true``.


Description
-----------

A RayCast represents a line from its origin to its destination position, ``cast_to``. It is used to query the 2D space in order to find the closest object along the path of the ray.

RayCast2D can ignore some objects by adding them to the exception list via ``add_exception``, by setting proper filtering with collision layers, or by filtering object types with type masks.

Only enabled raycasts will be able to query the space and report collisions.

RayCast2D calculates intersection every physics frame (see :ref:`Node<class_node>`), and the result is cached so it can be used later until the next frame. If multiple queries are required between physics frames (or during the same frame) use :ref:`force_raycast_update<class_RayCast2D_force_raycast_update>` after adjusting the raycast.

Member Function Description
---------------------------

.. _class_RayCast2D_add_exception:

- void **add_exception** **(** :ref:`Object<class_object>` node **)**

Adds a collision exception so the ray does not report collisions with the specified node.

.. _class_RayCast2D_add_exception_rid:

- void **add_exception_rid** **(** :ref:`RID<class_rid>` rid **)**

Adds a collision exception so the ray does not report collisions with the specified :ref:`RID<class_rid>`.

.. _class_RayCast2D_clear_exceptions:

- void **clear_exceptions** **(** **)**

Removes all collision exceptions for this ray.

.. _class_RayCast2D_force_raycast_update:

- void **force_raycast_update** **(** **)**

Updates the collision information for the ray.  Use this method to update the collision information immediately instead of waiting for the next ``_physics_process`` call, for example if the ray or its parent has changed state. Note: ``enabled == true`` is not required for this to work.

.. _class_RayCast2D_get_collider:

- :ref:`Object<class_object>` **get_collider** **(** **)** const

Returns the closest object the ray is pointing to. Note that this does not consider the length of the ray, so you must also use :ref:`is_colliding<class_RayCast2D_is_colliding>` to check if the object returned is actually colliding with the ray.

Example:

::

    if RayCast2D.is_colliding():
        var collider = RayCast2D.get_collider()

.. _class_RayCast2D_get_collider_shape:

- :ref:`int<class_int>` **get_collider_shape** **(** **)** const

Returns the collision shape of the closest object the ray is pointing to.  Note that this does not consider the length of the ray, so you must also use :ref:`is_colliding<class_RayCast2D_is_colliding>` to check if the object returned is actually colliding with the ray.

Example:

::

    if RayCast2D.is_colliding():
        var shape = RayCast2D.get_collider_shape()

.. _class_RayCast2D_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** const

Return an individual bit on the collision mask.

.. _class_RayCast2D_get_collision_normal:

- :ref:`Vector2<class_vector2>` **get_collision_normal** **(** **)** const

Returns the normal of the intersecting object's shape at the collision point.

.. _class_RayCast2D_get_collision_point:

- :ref:`Vector2<class_vector2>` **get_collision_point** **(** **)** const

Returns the collision point at which the ray intersects the closest object. Note: this point is in the **global** coordinate system.

.. _class_RayCast2D_is_colliding:

- :ref:`bool<class_bool>` **is_colliding** **(** **)** const

Return whether the closest object the ray is pointing to is colliding with the vector (considering the vector length).

.. _class_RayCast2D_remove_exception:

- void **remove_exception** **(** :ref:`Object<class_object>` node **)**

Removes a collision exception so the ray does report collisions with the specified node.

.. _class_RayCast2D_remove_exception_rid:

- void **remove_exception_rid** **(** :ref:`RID<class_rid>` rid **)**

Removes a collision exception so the ray does report collisions with the specified :ref:`RID<class_rid>`.

.. _class_RayCast2D_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Set/clear individual bits on the collision mask. This makes selecting the areas scanned easier.


