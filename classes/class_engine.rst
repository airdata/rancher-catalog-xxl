.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Engine.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Engine:

Engine
======

**Inherits:** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Access to basic engine properties.

Member Functions
----------------

+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                | :ref:`get_frames_drawn<class_Engine_get_frames_drawn>` **(** **)**                                  |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`            | :ref:`get_frames_per_second<class_Engine_get_frames_per_second>` **(** **)** const                  |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`MainLoop<class_mainloop>`      | :ref:`get_main_loop<class_Engine_get_main_loop>` **(** **)** const                                  |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`Object<class_object>`          | :ref:`get_singleton<class_Engine_get_singleton>` **(** :ref:`String<class_string>` name **)** const |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_dictionary>`  | :ref:`get_version_info<class_Engine_get_version_info>` **(** **)** const                            |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`              | :ref:`has_singleton<class_Engine_has_singleton>` **(** :ref:`String<class_string>` name **)** const |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`              | :ref:`is_in_physics_frame<class_Engine_is_in_physics_frame>` **(** **)** const                      |
+--------------------------------------+-----------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_Engine_editor_hint:

- :ref:`bool<class_bool>` **editor_hint** - If ``true``, it is running inside the editor. Useful for tool scripts.

  .. _class_Engine_iterations_per_second:

- :ref:`int<class_int>` **iterations_per_second** - The number of fixed iterations per second (for fixed process and physics).

  .. _class_Engine_target_fps:

- :ref:`int<class_int>` **target_fps** - The desired frames per second. If the hardware cannot keep up, this setting may not be respected. Defaults to 0, which indicates no limit.

  .. _class_Engine_time_scale:

- :ref:`float<class_float>` **time_scale** - Controls how fast or slow the in-game clock ticks versus the real life one. It defaults to 1.0. A value of 2.0 means the game moves twice as fast as real life, whilst a value of 0.5 means the game moves at half the regular speed.


Description
-----------

The ``Engine`` class allows you to query and modify the game's run-time parameters, such as frames per second, time scale, and others.

Member Function Description
---------------------------

.. _class_Engine_get_frames_drawn:

- :ref:`int<class_int>` **get_frames_drawn** **(** **)**

Returns the total number of frames drawn.

.. _class_Engine_get_frames_per_second:

- :ref:`float<class_float>` **get_frames_per_second** **(** **)** const

Returns the frames per second of the running game.

.. _class_Engine_get_main_loop:

- :ref:`MainLoop<class_mainloop>` **get_main_loop** **(** **)** const

Returns the main loop object (see :ref:`MainLoop<class_mainloop>` and :ref:`SceneTree<class_scenetree>`).

.. _class_Engine_get_singleton:

- :ref:`Object<class_object>` **get_singleton** **(** :ref:`String<class_string>` name **)** const

.. _class_Engine_get_version_info:

- :ref:`Dictionary<class_dictionary>` **get_version_info** **(** **)** const

Returns the current engine version information in a Dictionary.



"major"    - Holds the major version number as a String

"minor"    - Holds the minor version number as a String

"patch"    - Holds the patch version number as a String

"status"   - Holds the status (e.g. "beta", "rc1", "rc2", ... "stable") as a String

"build"    - Holds the build name (e.g. "custom-build") as a String

"string"   - major + minor + patch + status + build in a single String

.. _class_Engine_has_singleton:

- :ref:`bool<class_bool>` **has_singleton** **(** :ref:`String<class_string>` name **)** const

.. _class_Engine_is_in_physics_frame:

- :ref:`bool<class_bool>` **is_in_physics_frame** **(** **)** const

Returns ``true`` if the game is inside the fixed process and physics phase of the game loop.


