.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SceneTree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SceneTree:

SceneTree
=========

**Inherits:** :ref:`MainLoop<class_mainloop>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

SceneTree manages a hierarchy of nodes.

Member Functions
----------------

+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                | :ref:`call_group<class_SceneTree_call_group>` **(** :ref:`String<class_string>` group, :ref:`String<class_string>` method **)** vararg                                                                             |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                | :ref:`call_group_flags<class_SceneTree_call_group_flags>` **(** :ref:`int<class_int>` flags, :ref:`String<class_string>` group, :ref:`String<class_string>` method **)** vararg                                    |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`change_scene<class_SceneTree_change_scene>` **(** :ref:`String<class_string>` path **)**                                                                                                                     |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`change_scene_to<class_SceneTree_change_scene_to>` **(** :ref:`PackedScene<class_packedscene>` packed_scene **)**                                                                                             |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`SceneTreeTimer<class_scenetreetimer>`  | :ref:`create_timer<class_SceneTree_create_timer>` **(** :ref:`float<class_float>` time_sec, :ref:`bool<class_bool>` pause_mode_process=true **)**                                                                  |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`get_frame<class_SceneTree_get_frame>` **(** **)** const                                                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolIntArray<class_poolintarray>`      | :ref:`get_network_connected_peers<class_SceneTree_get_network_connected_peers>` **(** **)** const                                                                                                                  |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`get_network_unique_id<class_SceneTree_get_network_unique_id>` **(** **)** const                                                                                                                              |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`get_node_count<class_SceneTree_get_node_count>` **(** **)** const                                                                                                                                            |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`                    | :ref:`get_nodes_in_group<class_SceneTree_get_nodes_in_group>` **(** :ref:`String<class_string>` group **)**                                                                                                        |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`get_rpc_sender_id<class_SceneTree_get_rpc_sender_id>` **(** **)** const                                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`has_group<class_SceneTree_has_group>` **(** :ref:`String<class_string>` name **)** const                                                                                                                     |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`has_network_peer<class_SceneTree_has_network_peer>` **(** **)** const                                                                                                                                        |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`is_input_handled<class_SceneTree_is_input_handled>` **(** **)**                                                                                                                                              |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`is_network_server<class_SceneTree_is_network_server>` **(** **)** const                                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`notify_group<class_SceneTree_notify_group>` **(** :ref:`String<class_string>` group, :ref:`int<class_int>` notification **)**                                                                                |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`notify_group_flags<class_SceneTree_notify_group_flags>` **(** :ref:`int<class_int>` call_flags, :ref:`String<class_string>` group, :ref:`int<class_int>` notification **)**                                  |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`queue_delete<class_SceneTree_queue_delete>` **(** :ref:`Object<class_object>` obj **)**                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`quit<class_SceneTree_quit>` **(** **)**                                                                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`reload_current_scene<class_SceneTree_reload_current_scene>` **(** **)**                                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`set_auto_accept_quit<class_SceneTree_set_auto_accept_quit>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`set_group<class_SceneTree_set_group>` **(** :ref:`String<class_string>` group, :ref:`String<class_string>` property, :ref:`Variant<class_variant>` value **)**                                               |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`set_group_flags<class_SceneTree_set_group_flags>` **(** :ref:`int<class_int>` call_flags, :ref:`String<class_string>` group, :ref:`String<class_string>` property, :ref:`Variant<class_variant>` value **)** |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`set_input_as_handled<class_SceneTree_set_input_as_handled>` **(** **)**                                                                                                                                      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`set_quit_on_go_back<class_SceneTree_set_quit_on_go_back>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                        |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                         | :ref:`set_screen_stretch<class_SceneTree_set_screen_stretch>` **(** :ref:`int<class_int>` mode, :ref:`int<class_int>` aspect, :ref:`Vector2<class_vector2>` minsize, :ref:`float<class_float>` shrink=1 **)**      |
+----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_SceneTree_connected_to_server:

- **connected_to_server** **(** **)**

Emitted whenever this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` successfully connected to a server. Only emitted on clients.

.. _class_SceneTree_connection_failed:

- **connection_failed** **(** **)**

Emitted whenever this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` fails to establish a connection to a server. Only emitted on clients.

.. _class_SceneTree_files_dropped:

- **files_dropped** **(** :ref:`PoolStringArray<class_poolstringarray>` files, :ref:`int<class_int>` screen **)**

Emitted whenever files are drag-and-dropped onto the window.

.. _class_SceneTree_idle_frame:

- **idle_frame** **(** **)**

Emitted immediately before :ref:`Node._process<class_Node__process>` is called on every node in the SceneTree.

.. _class_SceneTree_network_peer_connected:

- **network_peer_connected** **(** :ref:`int<class_int>` id **)**

Emitted whenever this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` connects with a new peer. ID is the peer ID of the new peer. Clients get notified when other clients connect to the same server. Upon connecting to a server, a client also receives this signal for the server (with ID being 1).

.. _class_SceneTree_network_peer_disconnected:

- **network_peer_disconnected** **(** :ref:`int<class_int>` id **)**

Emitted whenever this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` disconnects from a peer. Clients get notified when other clients disconnect from the same server.

.. _class_SceneTree_node_added:

- **node_added** **(** :ref:`Object<class_object>` node **)**

Emitted whenever a node is added to the SceneTree.

.. _class_SceneTree_node_configuration_warning_changed:

- **node_configuration_warning_changed** **(** :ref:`Object<class_object>` node **)**

Emitted when a node's configuration changed. Only emitted in tool mode.

.. _class_SceneTree_node_removed:

- **node_removed** **(** :ref:`Object<class_object>` node **)**

Emitted whenever a node is removed from the SceneTree.

.. _class_SceneTree_physics_frame:

- **physics_frame** **(** **)**

Emitted immediately before :ref:`Node._physics_process<class_Node__physics_process>` is called on every node in the SceneTree.

.. _class_SceneTree_screen_resized:

- **screen_resized** **(** **)**

Emitted whenever the screen resolution (fullscreen) or window size (windowed) changes.

.. _class_SceneTree_server_disconnected:

- **server_disconnected** **(** **)**

Emitted whenever this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` disconnected from server. Only emitted on clients.

.. _class_SceneTree_tree_changed:

- **tree_changed** **(** **)**

Emitted whenever the SceneTree hierarchy changed (children being moved or renamed, etc.).


Member Variables
----------------

  .. _class_SceneTree_current_scene:

- :ref:`Node<class_node>` **current_scene** - The current scene.

  .. _class_SceneTree_debug_collisions_hint:

- :ref:`bool<class_bool>` **debug_collisions_hint**

  .. _class_SceneTree_debug_navigation_hint:

- :ref:`bool<class_bool>` **debug_navigation_hint**

  .. _class_SceneTree_edited_scene_root:

- :ref:`Node<class_node>` **edited_scene_root** - The root of the edited scene.

  .. _class_SceneTree_multiplayer_api:

- :ref:`MultiplayerAPI<class_multiplayerapi>` **multiplayer_api**

  .. _class_SceneTree_network_peer:

- :ref:`NetworkedMultiplayerPeer<class_networkedmultiplayerpeer>` **network_peer** - The peer object to handle the RPC system (effectively enabling networking when set). Depending on the peer itself, the SceneTree will become a network server (check with :ref:`is_network_server()<class_SceneTree_is_network_server()>`) and will set root node's network mode to master (see NETWORK_MODE\_\* constants in :ref:`Node<class_node>`), or it will become a regular peer with root node set to slave. All child nodes are set to inherit the network mode by default. Handling of networking-related events (connection, disconnection, new clients) is done by connecting to SceneTree's signals.

  .. _class_SceneTree_paused:

- :ref:`bool<class_bool>` **paused** - If ``true`` the SceneTree is paused.

  .. _class_SceneTree_refuse_new_network_connections:

- :ref:`bool<class_bool>` **refuse_new_network_connections** - If ``true`` the SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` refuses new incoming connections.

  .. _class_SceneTree_root:

- :ref:`Viewport<class_viewport>` **root** - The SceneTree's :ref:`Viewport<class_viewport>`.

  .. _class_SceneTree_use_font_oversampling:

- :ref:`bool<class_bool>` **use_font_oversampling** - If ``true`` font oversampling is used.


Enums
-----

  .. _enum_SceneTree_GroupCallFlags:

enum **GroupCallFlags**

- **GROUP_CALL_DEFAULT** = **0**
- **GROUP_CALL_REVERSE** = **1**
- **GROUP_CALL_REALTIME** = **2**
- **GROUP_CALL_UNIQUE** = **4**

  .. _enum_SceneTree_StretchMode:

enum **StretchMode**

- **STRETCH_MODE_DISABLED** = **0**
- **STRETCH_MODE_2D** = **1**
- **STRETCH_MODE_VIEWPORT** = **2**

  .. _enum_SceneTree_StretchAspect:

enum **StretchAspect**

- **STRETCH_ASPECT_IGNORE** = **0**
- **STRETCH_ASPECT_KEEP** = **1**
- **STRETCH_ASPECT_KEEP_WIDTH** = **2**
- **STRETCH_ASPECT_KEEP_HEIGHT** = **3**
- **STRETCH_ASPECT_EXPAND** = **4**


Description
-----------

As one of the most important classes, the ``SceneTree`` manages the hierarchy of nodes in a scene as well as scenes themselves. Nodes can be added, retrieved and removed. The whole scene tree (and thus the current scene) can be paused. Scenes can be loaded, switched and reloaded. You can also use the SceneTree to organize your nodes into groups: every node can be assigned as many groups as you want to create, e.g. a "enemy" group. You can then iterate these groups or even call methods and set properties on all the group's members at once.

Member Function Description
---------------------------

.. _class_SceneTree_call_group:

- :ref:`Variant<class_variant>` **call_group** **(** :ref:`String<class_string>` group, :ref:`String<class_string>` method **)** vararg

Calls ``method`` on each member of the given group.

.. _class_SceneTree_call_group_flags:

- :ref:`Variant<class_variant>` **call_group_flags** **(** :ref:`int<class_int>` flags, :ref:`String<class_string>` group, :ref:`String<class_string>` method **)** vararg

Calls ``method`` on each member of the given group, respecting the given enum GROUP_CALL flags.

.. _class_SceneTree_change_scene:

- :ref:`int<class_int>` **change_scene** **(** :ref:`String<class_string>` path **)**

Changes to the scene at the given ``path``.

.. _class_SceneTree_change_scene_to:

- :ref:`int<class_int>` **change_scene_to** **(** :ref:`PackedScene<class_packedscene>` packed_scene **)**

Changes to the given :ref:`PackedScene<class_packedscene>`.

.. _class_SceneTree_create_timer:

- :ref:`SceneTreeTimer<class_scenetreetimer>` **create_timer** **(** :ref:`float<class_float>` time_sec, :ref:`bool<class_bool>` pause_mode_process=true **)**

Returns a :ref:`SceneTreeTimer<class_scenetreetimer>` which will :ref:`SceneTreeTimer.timeout<class_SceneTreeTimer_timeout>` after the given time in seconds elapsed in this SceneTree. If ``pause_mode_process`` is set to false, pausing the SceneTree will also pause the timer.

.. _class_SceneTree_get_frame:

- :ref:`int<class_int>` **get_frame** **(** **)** const

.. _class_SceneTree_get_network_connected_peers:

- :ref:`PoolIntArray<class_poolintarray>` **get_network_connected_peers** **(** **)** const

Returns the peer IDs of all connected peers of this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>`.

.. _class_SceneTree_get_network_unique_id:

- :ref:`int<class_int>` **get_network_unique_id** **(** **)** const

Returns the unique peer ID of this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>`.

.. _class_SceneTree_get_node_count:

- :ref:`int<class_int>` **get_node_count** **(** **)** const

Returns the number of nodes in this SceneTree.

.. _class_SceneTree_get_nodes_in_group:

- :ref:`Array<class_array>` **get_nodes_in_group** **(** :ref:`String<class_string>` group **)**

Returns all nodes assigned to the given group.

.. _class_SceneTree_get_rpc_sender_id:

- :ref:`int<class_int>` **get_rpc_sender_id** **(** **)** const

Returns the sender's peer ID for the most recently received RPC call.

.. _class_SceneTree_has_group:

- :ref:`bool<class_bool>` **has_group** **(** :ref:`String<class_string>` name **)** const

Returns ``true`` if the given group exists.

.. _class_SceneTree_has_network_peer:

- :ref:`bool<class_bool>` **has_network_peer** **(** **)** const

Returns ``true`` if there is a :ref:`network_peer<class_SceneTree_network_peer>` set.

.. _class_SceneTree_is_input_handled:

- :ref:`bool<class_bool>` **is_input_handled** **(** **)**

Returns ``true`` if the most recent InputEvent was marked as handled with :ref:`set_input_as_handled<class_SceneTree_set_input_as_handled>`.

.. _class_SceneTree_is_network_server:

- :ref:`bool<class_bool>` **is_network_server** **(** **)** const

Returns ``true`` if this SceneTree's :ref:`network_peer<class_SceneTree_network_peer>` is in server mode (listening for connections).

.. _class_SceneTree_notify_group:

- void **notify_group** **(** :ref:`String<class_string>` group, :ref:`int<class_int>` notification **)**

Sends the given notification to all members of the ``group``.

.. _class_SceneTree_notify_group_flags:

- void **notify_group_flags** **(** :ref:`int<class_int>` call_flags, :ref:`String<class_string>` group, :ref:`int<class_int>` notification **)**

Sends the given notification to all members of the ``group``, respecting the given enum GROUP_CALL flags.

.. _class_SceneTree_queue_delete:

- void **queue_delete** **(** :ref:`Object<class_object>` obj **)**

Queues the given object for deletion, delaying the call to :ref:`Object.free<class_Object_free>` to after the current frame.

.. _class_SceneTree_quit:

- void **quit** **(** **)**

Quits the application.

.. _class_SceneTree_reload_current_scene:

- :ref:`int<class_int>` **reload_current_scene** **(** **)**

Reloads the currently active scene.

.. _class_SceneTree_set_auto_accept_quit:

- void **set_auto_accept_quit** **(** :ref:`bool<class_bool>` enabled **)**

If ``true`` the application automatically accepts quitting.

.. _class_SceneTree_set_group:

- void **set_group** **(** :ref:`String<class_string>` group, :ref:`String<class_string>` property, :ref:`Variant<class_variant>` value **)**

Sets the given ``property`` to ``value`` on all members of the given group.

.. _class_SceneTree_set_group_flags:

- void **set_group_flags** **(** :ref:`int<class_int>` call_flags, :ref:`String<class_string>` group, :ref:`String<class_string>` property, :ref:`Variant<class_variant>` value **)**

Sets the given ``property`` to ``value`` on all members of the given group, respecting the given enum GROUP_CALL flags.

.. _class_SceneTree_set_input_as_handled:

- void **set_input_as_handled** **(** **)**

Marks the most recent input event as handled.

.. _class_SceneTree_set_quit_on_go_back:

- void **set_quit_on_go_back** **(** :ref:`bool<class_bool>` enabled **)**

If ``true`` the application quits automatically on going back (e.g. on Android).

.. _class_SceneTree_set_screen_stretch:

- void **set_screen_stretch** **(** :ref:`int<class_int>` mode, :ref:`int<class_int>` aspect, :ref:`Vector2<class_vector2>` minsize, :ref:`float<class_float>` shrink=1 **)**

Configures screen stretching to the given enum StretchMode, enum StretchAspect, minimum size and ``shrink``.


