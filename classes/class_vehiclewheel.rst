.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VehicleWheel.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VehicleWheel:

VehicleWheel
============

**Inherits:** :ref:`Spatial<class_spatial>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Physics object that simulates the behaviour of a wheel.

Member Functions
----------------

+----------------------------+--------------------------------------------------------------------------+
| :ref:`float<class_float>`  | :ref:`get_skidinfo<class_VehicleWheel_get_skidinfo>` **(** **)** const   |
+----------------------------+--------------------------------------------------------------------------+
| :ref:`bool<class_bool>`    | :ref:`is_in_contact<class_VehicleWheel_is_in_contact>` **(** **)** const |
+----------------------------+--------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_VehicleWheel_damping_compression:

- :ref:`float<class_float>` **damping_compression** - The damping applied to the spring when the spring is being compressed. This value should be between 0.0 (no damping) and 1.0. A value of 0.0 means the car will keep bouncing as the spring keeps its energy. A good value for this is around 0.3 for a normal car, 0.5 for a race car.

  .. _class_VehicleWheel_damping_relaxation:

- :ref:`float<class_float>` **damping_relaxation** - The damping applied to the spring when relaxing. This value should be between 0.0 (no damping) and 1.0. This value should always be slightly higher than the :ref:`damping_compression<class_VehicleWheel_damping_compression>` property. For a :ref:`damping_compression<class_VehicleWheel_damping_compression>` value of 0.3, try a relaxation value of 0.5

  .. _class_VehicleWheel_suspension_max_force:

- :ref:`float<class_float>` **suspension_max_force** - The maximum force the spring can resist. This value should be higher than a quarter of the :ref:`RigidBody.mass<class_RigidBody_mass>` of the :ref:`VehicleBody<class_vehiclebody>` or the spring will not carry the weight of the vehicle. Good results are often obtained by a value that is about 3x to 4x this number.

  .. _class_VehicleWheel_suspension_stiffness:

- :ref:`float<class_float>` **suspension_stiffness** - This value defines the stiffness of the suspension. Use a value lower than 50 for an off-road car, a value between 50 and 100 for a race car and try something around 200 for something like a Formula 1 car.

  .. _class_VehicleWheel_suspension_travel:

- :ref:`float<class_float>` **suspension_travel** - This is the distance the suspension can travel. As Godot measures are in meters keep this setting relatively low. Try a value between 0.1 and 0.3 depending on the type of car .

  .. _class_VehicleWheel_use_as_steering:

- :ref:`bool<class_bool>` **use_as_steering** - If true this wheel will be turned when the car steers.

  .. _class_VehicleWheel_use_as_traction:

- :ref:`bool<class_bool>` **use_as_traction** - If true this wheel transfers engine force to the ground to propel the vehicle forward.

  .. _class_VehicleWheel_wheel_friction_slip:

- :ref:`float<class_float>` **wheel_friction_slip** - This determines how much grip this wheel has. It is combined with the friction setting of the surface the wheel is in contact with. 0.0 means no grip, 1.0 is normal grip. For a drift car setup, try setting the grip of the rear wheels slightly lower than the front wheels, or use a lower value to simulate tire wear.

It's best to set this to 1.0 when starting out.

  .. _class_VehicleWheel_wheel_radius:

- :ref:`float<class_float>` **wheel_radius** - The radius of the wheel in meters.

  .. _class_VehicleWheel_wheel_rest_length:

- :ref:`float<class_float>` **wheel_rest_length** - This is the distance in meters the wheel is lowered from its origin point. Don't set this to 0.0 and move the wheel into position, instead move the origin point of your wheel (the gizmo in Godot) to the position the wheel will take when bottoming out, then use the rest length to move the wheel down to the position it should be in when the car is in rest.

  .. _class_VehicleWheel_wheel_roll_influence:

- :ref:`float<class_float>` **wheel_roll_influence** - This value effects the roll of your vehicle. If set to 0.0 for all wheels your vehicle will be prone to rolling over while a value of 1.0 will resist body roll.


Description
-----------

This node needs to be used as a child node of :ref:`VehicleBody<class_vehiclebody>` and simulates the behaviour of one of its wheels. This node also acts as a collider to detect if the wheel is touching a surface.

Member Function Description
---------------------------

.. _class_VehicleWheel_get_skidinfo:

- :ref:`float<class_float>` **get_skidinfo** **(** **)** const

Returns a value between 0.0 and 1.0 that indicates whether this wheel is skidding. 0.0 is not skidding, 1.0 means the wheel has lost grip.

.. _class_VehicleWheel_is_in_contact:

- :ref:`bool<class_bool>` **is_in_contact** **(** **)** const

Returns true if this wheel is in contact with a surface.


