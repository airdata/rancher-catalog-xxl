.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SliderJoint.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SliderJoint:

SliderJoint
===========

**Inherits:** :ref:`Joint<class_joint>` **<** :ref:`Spatial<class_spatial>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Piston kind of slider between two bodies in 3D.

Member Variables
----------------

  .. _class_SliderJoint_angular_limit/damping:

- :ref:`float<class_float>` **angular_limit/damping** - The amount of damping of the rotation when the limit is surpassed.

A lower damping value allows a rotation initiated by body A to travel to body B slower.

  .. _class_SliderJoint_angular_limit/lower_angle:

- :ref:`float<class_float>` **angular_limit/lower_angle** - The lower limit of rotation in the slider.

  .. _class_SliderJoint_angular_limit/restitution:

- :ref:`float<class_float>` **angular_limit/restitution** - The amount of restitution of the rotation when the limit is surpassed.

Does not affect damping.

  .. _class_SliderJoint_angular_limit/softness:

- :ref:`float<class_float>` **angular_limit/softness** - A factor applied to the all rotation once the limit is surpassed.

Makes all rotation slower when between 0 and 1.

  .. _class_SliderJoint_angular_limit/upper_angle:

- :ref:`float<class_float>` **angular_limit/upper_angle** - The upper limit of rotation in the slider.

  .. _class_SliderJoint_angular_motion/damping:

- :ref:`float<class_float>` **angular_motion/damping** - The amount of damping of the rotation in the limits.

  .. _class_SliderJoint_angular_motion/restitution:

- :ref:`float<class_float>` **angular_motion/restitution** - The amount of restitution of the rotation in the limits.

  .. _class_SliderJoint_angular_motion/softness:

- :ref:`float<class_float>` **angular_motion/softness** - A factor applied to the all rotation in the limits.

  .. _class_SliderJoint_angular_ortho/damping:

- :ref:`float<class_float>` **angular_ortho/damping** - The amount of damping of the rotation across axes orthogonal to the slider.

  .. _class_SliderJoint_angular_ortho/restitution:

- :ref:`float<class_float>` **angular_ortho/restitution** - The amount of restitution of the rotation across axes orthogonal to the slider.

  .. _class_SliderJoint_angular_ortho/softness:

- :ref:`float<class_float>` **angular_ortho/softness** - A factor applied to the all rotation across axes orthogonal to the slider.

  .. _class_SliderJoint_linear_limit/damping:

- :ref:`float<class_float>` **linear_limit/damping** - The amount of damping that happens once the limit defined by :ref:`linear_limit/lower_distance<class_SliderJoint_linear_limit/lower_distance>` and :ref:`linear_limit/upper_distance<class_SliderJoint_linear_limit/upper_distance>` is surpassed.

  .. _class_SliderJoint_linear_limit/lower_distance:

- :ref:`float<class_float>` **linear_limit/lower_distance** - The minimum difference between the pivot points on their x-axis before damping happens.

  .. _class_SliderJoint_linear_limit/restitution:

- :ref:`float<class_float>` **linear_limit/restitution** - The amount of restitution once the limits are surpassed. The lower, the more velocity-energy gets lost.

  .. _class_SliderJoint_linear_limit/softness:

- :ref:`float<class_float>` **linear_limit/softness** - A factor applied to the movement across the slider axis once the limits get surpassed. The lower, the slower the movement.

  .. _class_SliderJoint_linear_limit/upper_distance:

- :ref:`float<class_float>` **linear_limit/upper_distance** - The maximum difference between the pivot points on their x-axis before damping happens.

  .. _class_SliderJoint_linear_motion/damping:

- :ref:`float<class_float>` **linear_motion/damping** - The amount of damping inside the slider limits.

  .. _class_SliderJoint_linear_motion/restitution:

- :ref:`float<class_float>` **linear_motion/restitution** - The amount of restitution inside the slider limits.

  .. _class_SliderJoint_linear_motion/softness:

- :ref:`float<class_float>` **linear_motion/softness** - A factor applied to the movement across the slider axis as long as the slider is in the limits. The lower, the slower the movement.

  .. _class_SliderJoint_linear_ortho/damping:

- :ref:`float<class_float>` **linear_ortho/damping** - The amount of damping when movement is across axes orthogonal to the slider.

  .. _class_SliderJoint_linear_ortho/restitution:

- :ref:`float<class_float>` **linear_ortho/restitution** - The amount of restitution when movement is across axes orthogonal to the slider.

  .. _class_SliderJoint_linear_ortho/softness:

- :ref:`float<class_float>` **linear_ortho/softness** - A factor applied to the movement across axes orthogonal to the slider.


Enums
-----

  .. _enum_SliderJoint_Param:

enum **Param**

- **PARAM_LINEAR_LIMIT_UPPER** = **0** --- The maximum difference between the pivot points on their x-axis before damping happens.
- **PARAM_LINEAR_LIMIT_LOWER** = **1** --- The minimum difference between the pivot points on their x-axis before damping happens.
- **PARAM_LINEAR_LIMIT_SOFTNESS** = **2** --- A factor applied to the movement across the slider axis once the limits get surpassed. The lower, the slower the movement.
- **PARAM_LINEAR_LIMIT_RESTITUTION** = **3** --- The amount of restitution once the limits are surpassed. The lower, the more velocityenergy gets lost.
- **PARAM_LINEAR_LIMIT_DAMPING** = **4** --- The amount of damping once the slider limits are surpassed.
- **PARAM_LINEAR_MOTION_SOFTNESS** = **5** --- A factor applied to the movement across the slider axis as long as the slider is in the limits. The lower, the slower the movement.
- **PARAM_LINEAR_MOTION_RESTITUTION** = **6** --- The amount of restitution inside the slider limits.
- **PARAM_LINEAR_MOTION_DAMPING** = **7** --- The amount of damping inside the slider limits.
- **PARAM_LINEAR_ORTHOGONAL_SOFTNESS** = **8** --- A factor applied to the movement across axes orthogonal to the slider.
- **PARAM_LINEAR_ORTHOGONAL_RESTITUTION** = **9** --- The amount of restitution when movement is across axes orthogonal to the slider.
- **PARAM_LINEAR_ORTHOGONAL_DAMPING** = **10** --- The amount of damping when movement is across axes orthogonal to the slider.
- **PARAM_ANGULAR_LIMIT_UPPER** = **11** --- The upper limit of rotation in the slider.
- **PARAM_ANGULAR_LIMIT_LOWER** = **12** --- The lower limit of rotation in the slider.
- **PARAM_ANGULAR_LIMIT_SOFTNESS** = **13** --- A factor applied to the all rotation once the limit is surpassed.
- **PARAM_ANGULAR_LIMIT_RESTITUTION** = **14** --- The amount of restitution of the rotation when the limit is surpassed.
- **PARAM_ANGULAR_LIMIT_DAMPING** = **15** --- The amount of damping of the rotation when the limit is surpassed.
- **PARAM_ANGULAR_MOTION_SOFTNESS** = **16** --- A factor applied to the all rotation in the limits.
- **PARAM_ANGULAR_MOTION_RESTITUTION** = **17** --- The amount of restitution of the rotation in the limits.
- **PARAM_ANGULAR_MOTION_DAMPING** = **18** --- The amount of damping of the rotation in the limits.
- **PARAM_ANGULAR_ORTHOGONAL_SOFTNESS** = **19** --- A factor applied to the all rotation across axes orthogonal to the slider.
- **PARAM_ANGULAR_ORTHOGONAL_RESTITUTION** = **20** --- The amount of restitution of the rotation across axes orthogonal to the slider.
- **PARAM_ANGULAR_ORTHOGONAL_DAMPING** = **21** --- The amount of damping of the rotation across axes orthogonal to the slider.
- **PARAM_MAX** = **22** --- End flag of PARAM\_\* constants, used internally.


Description
-----------

Slides across the x-axis of the Pivot object.

