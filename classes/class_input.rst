.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Input.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Input:

Input
=====

**Inherits:** :ref:`Object<class_object>`

**Inherited By:** :ref:`InputDefault<class_inputdefault>`

**Category:** Core

Brief Description
-----------------

A Singleton that deals with inputs.

Member Functions
----------------

+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`action_press<class_Input_action_press>` **(** :ref:`String<class_string>` action **)**                                                                                                                                     |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`action_release<class_Input_action_release>` **(** :ref:`String<class_string>` action **)**                                                                                                                                 |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`add_joy_mapping<class_Input_add_joy_mapping>` **(** :ref:`String<class_string>` mapping, :ref:`bool<class_bool>` update_existing=false **)**                                                                               |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`  | :ref:`get_accelerometer<class_Input_get_accelerometer>` **(** **)** const                                                                                                                                                        |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_array>`      | :ref:`get_connected_joypads<class_Input_get_connected_joypads>` **(** **)**                                                                                                                                                      |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`  | :ref:`get_gravity<class_Input_get_gravity>` **(** **)** const                                                                                                                                                                    |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`  | :ref:`get_gyroscope<class_Input_get_gyroscope>` **(** **)** const                                                                                                                                                                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_joy_axis<class_Input_get_joy_axis>` **(** :ref:`int<class_int>` device, :ref:`int<class_int>` axis **)** const                                                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_joy_axis_index_from_string<class_Input_get_joy_axis_index_from_string>` **(** :ref:`String<class_string>` axis **)**                                                                                                   |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`    | :ref:`get_joy_axis_string<class_Input_get_joy_axis_string>` **(** :ref:`int<class_int>` axis_index **)**                                                                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_joy_button_index_from_string<class_Input_get_joy_button_index_from_string>` **(** :ref:`String<class_string>` button **)**                                                                                             |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`    | :ref:`get_joy_button_string<class_Input_get_joy_button_string>` **(** :ref:`int<class_int>` button_index **)**                                                                                                                   |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`    | :ref:`get_joy_guid<class_Input_get_joy_guid>` **(** :ref:`int<class_int>` device **)** const                                                                                                                                     |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`    | :ref:`get_joy_name<class_Input_get_joy_name>` **(** :ref:`int<class_int>` device **)**                                                                                                                                           |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`      | :ref:`get_joy_vibration_duration<class_Input_get_joy_vibration_duration>` **(** :ref:`int<class_int>` device **)**                                                                                                               |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_joy_vibration_strength<class_Input_get_joy_vibration_strength>` **(** :ref:`int<class_int>` device **)**                                                                                                               |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_vector2>`  | :ref:`get_last_mouse_speed<class_Input_get_last_mouse_speed>` **(** **)** const                                                                                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`  | :ref:`get_magnetometer<class_Input_get_magnetometer>` **(** **)** const                                                                                                                                                          |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_mouse_button_mask<class_Input_get_mouse_button_mask>` **(** **)** const                                                                                                                                                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`          | :ref:`get_mouse_mode<class_Input_get_mouse_mode>` **(** **)** const                                                                                                                                                              |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_action_just_pressed<class_Input_is_action_just_pressed>` **(** :ref:`String<class_string>` action **)** const                                                                                                           |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_action_just_released<class_Input_is_action_just_released>` **(** :ref:`String<class_string>` action **)** const                                                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_action_pressed<class_Input_is_action_pressed>` **(** :ref:`String<class_string>` action **)** const                                                                                                                     |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_joy_button_pressed<class_Input_is_joy_button_pressed>` **(** :ref:`int<class_int>` device, :ref:`int<class_int>` button **)** const                                                                                     |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_joy_known<class_Input_is_joy_known>` **(** :ref:`int<class_int>` device **)**                                                                                                                                           |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_key_pressed<class_Input_is_key_pressed>` **(** :ref:`int<class_int>` scancode **)** const                                                                                                                               |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_mouse_button_pressed<class_Input_is_mouse_button_pressed>` **(** :ref:`int<class_int>` button **)** const                                                                                                               |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`joy_connection_changed<class_Input_joy_connection_changed>` **(** :ref:`int<class_int>` device, :ref:`bool<class_bool>` connected, :ref:`String<class_string>` name, :ref:`String<class_string>` guid **)**                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`parse_input_event<class_Input_parse_input_event>` **(** :ref:`InputEvent<class_inputevent>` event **)**                                                                                                                    |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`remove_joy_mapping<class_Input_remove_joy_mapping>` **(** :ref:`String<class_string>` guid **)**                                                                                                                           |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_custom_mouse_cursor<class_Input_set_custom_mouse_cursor>` **(** :ref:`Resource<class_resource>` image, :ref:`int<class_int>` shape=0, :ref:`Vector2<class_vector2>` hotspot=Vector2( 0, 0 ) **)**                      |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_mouse_mode<class_Input_set_mouse_mode>` **(** :ref:`int<class_int>` mode **)**                                                                                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`start_joy_vibration<class_Input_start_joy_vibration>` **(** :ref:`int<class_int>` device, :ref:`float<class_float>` weak_magnitude, :ref:`float<class_float>` strong_magnitude, :ref:`float<class_float>` duration=0 **)** |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`stop_joy_vibration<class_Input_stop_joy_vibration>` **(** :ref:`int<class_int>` device **)**                                                                                                                               |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`warp_mouse_position<class_Input_warp_mouse_position>` **(** :ref:`Vector2<class_vector2>` to **)**                                                                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_Input_joy_connection_changed:

- **joy_connection_changed** **(** :ref:`int<class_int>` device, :ref:`bool<class_bool>` connected **)**

Emitted when a joypad device has been connected or disconnected.


Enums
-----

  .. _enum_Input_MouseMode:

enum **MouseMode**

- **MOUSE_MODE_VISIBLE** = **0** --- Makes the mouse cursor visible if it is hidden.
- **MOUSE_MODE_HIDDEN** = **1** --- Makes the mouse cursor hidden if it is visible.
- **MOUSE_MODE_CAPTURED** = **2** --- Captures the mouse. The mouse will be hidden and unable to leave the game window. But it will still register movement and mouse button presses.
- **MOUSE_MODE_CONFINED** = **3** --- Makes the mouse cursor visible but confines it to the game window.

  .. _enum_Input_CursorShape:

enum **CursorShape**

- **CURSOR_ARROW** = **0** --- Arrow cursor. Standard, default pointing cursor.
- **CURSOR_IBEAM** = **1** --- I-beam cursor. Usually used to show where the text cursor will appear when the mouse is clicked.
- **CURSOR_POINTING_HAND** = **2** --- Pointing hand cursor. Usually used to indicate the pointer is over a link or other interactable item.
- **CURSOR_CROSS** = **3** --- Cross cursor. Typically appears over regions in which a drawing operation can be performance or for selections.
- **CURSOR_WAIT** = **4** --- Wait cursor. Indicates that the application is busy performing an operation.
- **CURSOR_BUSY** = **5** --- Busy cursor. See ``CURSOR_WAIT``.
- **CURSOR_DRAG** = **6** --- Drag cursor. Usually displayed when dragging something.
- **CURSOR_CAN_DROP** = **7** --- Can drop cursor. Usually displayed when dragging something to indicate that it can be dropped at the current position.
- **CURSOR_FORBIDDEN** = **8** --- Forbidden cursor. Indicates that the current action is forbidden (for example, when dragging something) or that the control at a position is disabled.
- **CURSOR_VSIZE** = **9** --- Vertical resize mouse cursor. A double headed vertical arrow. It tells the user they can resize the window or the panel vertically.
- **CURSOR_HSIZE** = **10** --- Horizontal resize mouse cursor. A double headed horizontal arrow. It tells the user they can resize the window or the panel horizontally.
- **CURSOR_BDIAGSIZE** = **11** --- Window resize mouse cursor. The cursor is a double headed arrow that goes from the bottom left to the top right. It tells the user they can resize the window or the panel both horizontally and vertically.
- **CURSOR_FDIAGSIZE** = **12** --- Window resize mouse cursor. The cursor is a double headed arrow that goes from the top left to the bottom right, the opposite of ``CURSOR_BDIAGSIZE``. It tells the user they can resize the window or the panel both horizontally and vertically.
- **CURSOR_MOVE** = **13** --- Move cursor. Indicates that something can be moved.
- **CURSOR_VSPLIT** = **14** --- Vertical split mouse cursor. On Windows, it's the same as ``CURSOR_VSIZE``.
- **CURSOR_HSPLIT** = **15** --- Horizontal split mouse cursor. On Windows, it's the same as ``CURSOR_HSIZE``.
- **CURSOR_HELP** = **16** --- Help cursor. Usually a question mark.


Description
-----------

A Singleton that deals with inputs. This includes key presses, mouse buttons and movement, joypads, and input actions. Actions and their events can be set in the Project Settings / Input Map tab. Or be set with :ref:`InputMap<class_inputmap>`.

Member Function Description
---------------------------

.. _class_Input_action_press:

- void **action_press** **(** :ref:`String<class_string>` action **)**

This will simulate pressing the specified action.

.. _class_Input_action_release:

- void **action_release** **(** :ref:`String<class_string>` action **)**

If the specified action is already pressed, this will release it.

.. _class_Input_add_joy_mapping:

- void **add_joy_mapping** **(** :ref:`String<class_string>` mapping, :ref:`bool<class_bool>` update_existing=false **)**

Add a new mapping entry (in SDL2 format) to the mapping database. Optionally update already connected devices.

.. _class_Input_get_accelerometer:

- :ref:`Vector3<class_vector3>` **get_accelerometer** **(** **)** const

If the device has an accelerometer, this will return the acceleration. Otherwise, it returns an empty :ref:`Vector3<class_vector3>`.

.. _class_Input_get_connected_joypads:

- :ref:`Array<class_array>` **get_connected_joypads** **(** **)**

Returns an :ref:`Array<class_array>` containing the device IDs of all currently connected joypads.

.. _class_Input_get_gravity:

- :ref:`Vector3<class_vector3>` **get_gravity** **(** **)** const

If the device has an accelerometer, this will return the gravity. Otherwise, it returns an empty :ref:`Vector3<class_vector3>`.

.. _class_Input_get_gyroscope:

- :ref:`Vector3<class_vector3>` **get_gyroscope** **(** **)** const

If the device has a gyroscope, this will return the rate of rotation in rad/s around a device's x, y, and z axis. Otherwise, it returns an empty :ref:`Vector3<class_vector3>`.

.. _class_Input_get_joy_axis:

- :ref:`float<class_float>` **get_joy_axis** **(** :ref:`int<class_int>` device, :ref:`int<class_int>` axis **)** const

Returns the current value of the joypad axis at given index (see ``JOY_*`` constants in :ref:`@GlobalScope<class_@globalscope>`)

.. _class_Input_get_joy_axis_index_from_string:

- :ref:`int<class_int>` **get_joy_axis_index_from_string** **(** :ref:`String<class_string>` axis **)**

.. _class_Input_get_joy_axis_string:

- :ref:`String<class_string>` **get_joy_axis_string** **(** :ref:`int<class_int>` axis_index **)**

.. _class_Input_get_joy_button_index_from_string:

- :ref:`int<class_int>` **get_joy_button_index_from_string** **(** :ref:`String<class_string>` button **)**

.. _class_Input_get_joy_button_string:

- :ref:`String<class_string>` **get_joy_button_string** **(** :ref:`int<class_int>` button_index **)**

.. _class_Input_get_joy_guid:

- :ref:`String<class_string>` **get_joy_guid** **(** :ref:`int<class_int>` device **)** const

Returns a SDL2 compatible device guid on platforms that use gamepad remapping. Returns "Default Gamepad" otherwise.

.. _class_Input_get_joy_name:

- :ref:`String<class_string>` **get_joy_name** **(** :ref:`int<class_int>` device **)**

Returns the name of the joypad at the specified device index

.. _class_Input_get_joy_vibration_duration:

- :ref:`float<class_float>` **get_joy_vibration_duration** **(** :ref:`int<class_int>` device **)**

Returns the duration of the current vibration effect in seconds.

.. _class_Input_get_joy_vibration_strength:

- :ref:`Vector2<class_vector2>` **get_joy_vibration_strength** **(** :ref:`int<class_int>` device **)**

Returns the strength of the joypad vibration: x is the strength of the weak motor, and y is the strength of the strong motor.

.. _class_Input_get_last_mouse_speed:

- :ref:`Vector2<class_vector2>` **get_last_mouse_speed** **(** **)** const

Returns the mouse speed for the last time the cursor was moved, and this until the next frame where the mouse moves. This means that even if the mouse is not moving, this function will still return the value of the last motion.

.. _class_Input_get_magnetometer:

- :ref:`Vector3<class_vector3>` **get_magnetometer** **(** **)** const

If the device has a magnetometer, this will return the magnetic field strength in micro-Tesla for all axes.

.. _class_Input_get_mouse_button_mask:

- :ref:`int<class_int>` **get_mouse_button_mask** **(** **)** const

Returns mouse buttons as a bitmask. If multiple mouse buttons are pressed at the same time the bits are added together.

.. _class_Input_get_mouse_mode:

- :ref:`int<class_int>` **get_mouse_mode** **(** **)** const

Return the mouse mode. See the constants for more information.

.. _class_Input_is_action_just_pressed:

- :ref:`bool<class_bool>` **is_action_just_pressed** **(** :ref:`String<class_string>` action **)** const

Returns ``true`` when the user starts pressing the action event, meaning it's true only on the frame that the user pressed down the button.

This is useful for code that needs to run only once when an action is pressed, instead of every frame while it's pressed.

.. _class_Input_is_action_just_released:

- :ref:`bool<class_bool>` **is_action_just_released** **(** :ref:`String<class_string>` action **)** const

Returns ``true`` when the user stops pressing the action event, meaning it's true only on the frame that the user released the button.

.. _class_Input_is_action_pressed:

- :ref:`bool<class_bool>` **is_action_pressed** **(** :ref:`String<class_string>` action **)** const

Returns ``true`` if you are pressing the action event.

.. _class_Input_is_joy_button_pressed:

- :ref:`bool<class_bool>` **is_joy_button_pressed** **(** :ref:`int<class_int>` device, :ref:`int<class_int>` button **)** const

Returns ``true`` if you are pressing the joypad button. (see ``JOY_*`` constants in :ref:`@GlobalScope<class_@globalscope>`)

.. _class_Input_is_joy_known:

- :ref:`bool<class_bool>` **is_joy_known** **(** :ref:`int<class_int>` device **)**

Returns ``true`` if the system knows the specified device. This means that it sets all button and axis indices exactly as defined in the ``JOY_*`` constants (see :ref:`@GlobalScope<class_@globalscope>`). Unknown joypads are not expected to match these constants, but you can still retrieve events from them.

.. _class_Input_is_key_pressed:

- :ref:`bool<class_bool>` **is_key_pressed** **(** :ref:`int<class_int>` scancode **)** const

Returns ``true`` if you are pressing the key. You can pass ``KEY_*``, which are pre-defined constants listed in :ref:`@GlobalScope<class_@globalscope>`.

.. _class_Input_is_mouse_button_pressed:

- :ref:`bool<class_bool>` **is_mouse_button_pressed** **(** :ref:`int<class_int>` button **)** const

Returns ``true`` if you are pressing the mouse button. You can pass ``BUTTON_*``, which are pre-defined constants listed in :ref:`@GlobalScope<class_@globalscope>`.

.. _class_Input_joy_connection_changed:

- void **joy_connection_changed** **(** :ref:`int<class_int>` device, :ref:`bool<class_bool>` connected, :ref:`String<class_string>` name, :ref:`String<class_string>` guid **)**

.. _class_Input_parse_input_event:

- void **parse_input_event** **(** :ref:`InputEvent<class_inputevent>` event **)**

Feeds an :ref:`InputEvent<class_inputevent>` to the game. Can be used to artificially trigger input events from code.

.. _class_Input_remove_joy_mapping:

- void **remove_joy_mapping** **(** :ref:`String<class_string>` guid **)**

Removes all mappings from the internal db that match the given uid.

.. _class_Input_set_custom_mouse_cursor:

- void **set_custom_mouse_cursor** **(** :ref:`Resource<class_resource>` image, :ref:`int<class_int>` shape=0, :ref:`Vector2<class_vector2>` hotspot=Vector2( 0, 0 ) **)**

Set a custom mouse cursor image, which is only visible inside the game window. The hotspot can also be specified. See enum ``CURSOR_*`` for the list of shapes.

.. _class_Input_set_mouse_mode:

- void **set_mouse_mode** **(** :ref:`int<class_int>` mode **)**

Set the mouse mode. See the constants for more information.

.. _class_Input_start_joy_vibration:

- void **start_joy_vibration** **(** :ref:`int<class_int>` device, :ref:`float<class_float>` weak_magnitude, :ref:`float<class_float>` strong_magnitude, :ref:`float<class_float>` duration=0 **)**

Starts to vibrate the joypad. Joypads usually come with two rumble motors, a strong and a weak one. weak_magnitude is the strength of the weak motor (between 0 and 1) and strong_magnitude is the strength of the strong motor (between 0 and 1). duration is the duration of the effect in seconds (a duration of 0 will try to play the vibration indefinitely).

Note that not every hardware is compatible with long effect durations, it is recommended to restart an effect if in need to play it for more than a few seconds.

.. _class_Input_stop_joy_vibration:

- void **stop_joy_vibration** **(** :ref:`int<class_int>` device **)**

Stops the vibration of the joypad.

.. _class_Input_warp_mouse_position:

- void **warp_mouse_position** **(** :ref:`Vector2<class_vector2>` to **)**

Sets the mouse position to the specified vector.


