.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Range.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Range:

Range
=====

**Inherits:** :ref:`Control<class_control>` **<** :ref:`CanvasItem<class_canvasitem>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Inherited By:** :ref:`SpinBox<class_spinbox>`, :ref:`ScrollBar<class_scrollbar>`, :ref:`ProgressBar<class_progressbar>`, :ref:`TextureProgress<class_textureprogress>`, :ref:`Slider<class_slider>`

**Category:** Core

Brief Description
-----------------

Abstract base class for range-based controls.

Member Functions
----------------

+-------+--------------------------------------------------------------------------+
| void  | :ref:`share<class_Range_share>` **(** :ref:`Node<class_node>` with **)** |
+-------+--------------------------------------------------------------------------+
| void  | :ref:`unshare<class_Range_unshare>` **(** **)**                          |
+-------+--------------------------------------------------------------------------+

Signals
-------

.. _class_Range_changed:

- **changed** **(** **)**

This signal is emitted when min, max, range or step change.

.. _class_Range_value_changed:

- **value_changed** **(** :ref:`float<class_float>` value **)**

This signal is emitted when value changes.


Member Variables
----------------

  .. _class_Range_exp_edit:

- :ref:`bool<class_bool>` **exp_edit** - If ``true`` and ``min_value`` is greater than 0, ``value`` will be represented exponentially rather than linearly.

  .. _class_Range_max_value:

- :ref:`float<class_float>` **max_value** - Maximum value. Range is clamped if ``value`` is greater than ``max_value``. Default value: 100.

  .. _class_Range_min_value:

- :ref:`float<class_float>` **min_value** - Minimum value. Range is clamped if ``value`` is less than ``min_value``. Default value: 0.

  .. _class_Range_page:

- :ref:`float<class_float>` **page** - Page size. Used mainly for :ref:`ScrollBar<class_scrollbar>`. ScrollBar's length is its size multiplied by ``page`` over the difference between ``min_value`` and ``max_value``.

  .. _class_Range_ratio:

- :ref:`float<class_float>` **ratio** - The value mapped between 0 and 1.

  .. _class_Range_rounded:

- :ref:`bool<class_bool>` **rounded** - If ``true``, ``value`` will always be rounded to the nearest integer.

  .. _class_Range_step:

- :ref:`float<class_float>` **step** - If greater than 0, ``value`` will always be rounded to a multiple of ``step``. If ``rounded`` is also ``true``, ``value`` will first be rounded to a multiple of ``step`` then rounded to the nearest integer.

  .. _class_Range_value:

- :ref:`float<class_float>` **value** - Range's current value.


Description
-----------

Range is a base class for :ref:`Control<class_control>` nodes that change a floating point *value* between a *minimum* and a *maximum*, using *step* and *page*, for example a :ref:`ScrollBar<class_scrollbar>`.

Member Function Description
---------------------------

.. _class_Range_share:

- void **share** **(** :ref:`Node<class_node>` with **)**

Binds two Ranges together along with any Ranges previously grouped with either of them. When any of Range's member variables change, it will share the new value with all other Ranges in its group.

.. _class_Range_unshare:

- void **unshare** **(** **)**

Stop Range from sharing its member variables with any other Range.


