.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Physics2DServer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Physics2DServer:

Physics2DServer
===============

**Inherits:** :ref:`Object<class_object>`

**Inherited By:** :ref:`Physics2DServerSW<class_physics2dserversw>`

**Category:** Core

Brief Description
-----------------

Physics 2D Server.

Member Functions
----------------

+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_add_shape<class_Physics2DServer_area_add_shape>` **(** :ref:`RID<class_rid>` area, :ref:`RID<class_rid>` shape, :ref:`Transform2D<class_transform2d>` transform=Transform2D( 1, 0, 0, 1, 0, 0 ) **)**                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_attach_object_instance_id<class_Physics2DServer_area_attach_object_instance_id>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` id **)**                                                                                                                                                                                             |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_clear_shapes<class_Physics2DServer_area_clear_shapes>` **(** :ref:`RID<class_rid>` area **)**                                                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`area_create<class_Physics2DServer_area_create>` **(** **)**                                                                                                                                                                                                                                                                                        |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`area_get_object_instance_id<class_Physics2DServer_area_get_object_instance_id>` **(** :ref:`RID<class_rid>` area **)** const                                                                                                                                                                                                                       |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                                      | :ref:`area_get_param<class_Physics2DServer_area_get_param>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` param **)** const                                                                                                                                                                                                                    |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`area_get_shape<class_Physics2DServer_area_get_shape>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx **)** const                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`area_get_shape_count<class_Physics2DServer_area_get_shape_count>` **(** :ref:`RID<class_rid>` area **)** const                                                                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_transform2d>`                              | :ref:`area_get_shape_transform<class_Physics2DServer_area_get_shape_transform>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx **)** const                                                                                                                                                                                            |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`area_get_space<class_Physics2DServer_area_get_space>` **(** :ref:`RID<class_rid>` area **)** const                                                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`area_get_space_override_mode<class_Physics2DServer_area_get_space_override_mode>` **(** :ref:`RID<class_rid>` area **)** const                                                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_transform2d>`                              | :ref:`area_get_transform<class_Physics2DServer_area_get_transform>` **(** :ref:`RID<class_rid>` area **)** const                                                                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_remove_shape<class_Physics2DServer_area_remove_shape>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx **)**                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_collision_layer<class_Physics2DServer_area_set_collision_layer>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` layer **)**                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_collision_mask<class_Physics2DServer_area_set_collision_mask>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` mask **)**                                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_monitor_callback<class_Physics2DServer_area_set_monitor_callback>` **(** :ref:`RID<class_rid>` area, :ref:`Object<class_object>` receiver, :ref:`String<class_string>` method **)**                                                                                                                                                       |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_param<class_Physics2DServer_area_set_param>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` param, :ref:`Variant<class_variant>` value **)**                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_shape<class_Physics2DServer_area_set_shape>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx, :ref:`RID<class_rid>` shape **)**                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_shape_disabled<class_Physics2DServer_area_set_shape_disabled>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disable **)**                                                                                                                                                                   |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_shape_transform<class_Physics2DServer_area_set_shape_transform>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_transform2d>` transform **)**                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_space<class_Physics2DServer_area_set_space>` **(** :ref:`RID<class_rid>` area, :ref:`RID<class_rid>` space **)**                                                                                                                                                                                                                          |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_space_override_mode<class_Physics2DServer_area_set_space_override_mode>` **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` mode **)**                                                                                                                                                                                               |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`area_set_transform<class_Physics2DServer_area_set_transform>` **(** :ref:`RID<class_rid>` area, :ref:`Transform2D<class_transform2d>` transform **)**                                                                                                                                                                                              |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_add_collision_exception<class_Physics2DServer_body_add_collision_exception>` **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` excepted_body **)**                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_add_force<class_Physics2DServer_body_add_force>` **(** :ref:`RID<class_rid>` body, :ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` force **)**                                                                                                                                                                            |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_add_shape<class_Physics2DServer_body_add_shape>` **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` shape, :ref:`Transform2D<class_transform2d>` transform=Transform2D( 1, 0, 0, 1, 0, 0 ) **)**                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_apply_impulse<class_Physics2DServer_body_apply_impulse>` **(** :ref:`RID<class_rid>` body, :ref:`Vector2<class_vector2>` position, :ref:`Vector2<class_vector2>` impulse **)**                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_attach_object_instance_id<class_Physics2DServer_body_attach_object_instance_id>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` id **)**                                                                                                                                                                                             |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_clear_shapes<class_Physics2DServer_body_clear_shapes>` **(** :ref:`RID<class_rid>` body **)**                                                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`body_create<class_Physics2DServer_body_create>` **(** **)**                                                                                                                                                                                                                                                                                        |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_collision_layer<class_Physics2DServer_body_get_collision_layer>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                             |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_collision_mask<class_Physics2DServer_body_get_collision_mask>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                               |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_continuous_collision_detection_mode<class_Physics2DServer_body_get_continuous_collision_detection_mode>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>`    | :ref:`body_get_direct_state<class_Physics2DServer_body_get_direct_state>` **(** :ref:`RID<class_rid>` body **)**                                                                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_max_contacts_reported<class_Physics2DServer_body_get_max_contacts_reported>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_mode<class_Physics2DServer_body_get_mode>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                                                   |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_object_instance_id<class_Physics2DServer_body_get_object_instance_id>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                       |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                          | :ref:`body_get_param<class_Physics2DServer_body_get_param>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` param **)** const                                                                                                                                                                                                                    |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`body_get_shape<class_Physics2DServer_body_get_shape>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)** const                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`body_get_shape_count<class_Physics2DServer_body_get_shape_count>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                                      | :ref:`body_get_shape_metadata<class_Physics2DServer_body_get_shape_metadata>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)** const                                                                                                                                                                                              |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_transform2d>`                              | :ref:`body_get_shape_transform<class_Physics2DServer_body_get_shape_transform>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)** const                                                                                                                                                                                            |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`body_get_space<class_Physics2DServer_body_get_space>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                                      | :ref:`body_get_state<class_Physics2DServer_body_get_state>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` state **)** const                                                                                                                                                                                                                    |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                            | :ref:`body_is_omitting_force_integration<class_Physics2DServer_body_is_omitting_force_integration>` **(** :ref:`RID<class_rid>` body **)** const                                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_remove_collision_exception<class_Physics2DServer_body_remove_collision_exception>` **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` excepted_body **)**                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_remove_shape<class_Physics2DServer_body_remove_shape>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)**                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_axis_velocity<class_Physics2DServer_body_set_axis_velocity>` **(** :ref:`RID<class_rid>` body, :ref:`Vector2<class_vector2>` axis_velocity **)**                                                                                                                                                                                          |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_collision_layer<class_Physics2DServer_body_set_collision_layer>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` layer **)**                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_collision_mask<class_Physics2DServer_body_set_collision_mask>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` mask **)**                                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_continuous_collision_detection_mode<class_Physics2DServer_body_set_continuous_collision_detection_mode>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` mode **)**                                                                                                                                                               |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_force_integration_callback<class_Physics2DServer_body_set_force_integration_callback>` **(** :ref:`RID<class_rid>` body, :ref:`Object<class_object>` receiver, :ref:`String<class_string>` method, :ref:`Variant<class_variant>` userdata=null **)**                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_max_contacts_reported<class_Physics2DServer_body_set_max_contacts_reported>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` amount **)**                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_mode<class_Physics2DServer_body_set_mode>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` mode **)**                                                                                                                                                                                                                             |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_omit_force_integration<class_Physics2DServer_body_set_omit_force_integration>` **(** :ref:`RID<class_rid>` body, :ref:`bool<class_bool>` enable **)**                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_param<class_Physics2DServer_body_set_param>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_shape<class_Physics2DServer_body_set_shape>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`RID<class_rid>` shape **)**                                                                                                                                                                                         |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_shape_as_one_way_collision<class_Physics2DServer_body_set_shape_as_one_way_collision>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` enable **)**                                                                                                                                            |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_shape_disabled<class_Physics2DServer_body_set_shape_disabled>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disable **)**                                                                                                                                                                   |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_shape_metadata<class_Physics2DServer_body_set_shape_metadata>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`Variant<class_variant>` metadata **)**                                                                                                                                                            |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_shape_transform<class_Physics2DServer_body_set_shape_transform>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_transform2d>` transform **)**                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_space<class_Physics2DServer_body_set_space>` **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` space **)**                                                                                                                                                                                                                          |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`body_set_state<class_Physics2DServer_body_set_state>` **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` state, :ref:`Variant<class_variant>` value **)**                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                            | :ref:`body_test_motion<class_Physics2DServer_body_test_motion>` **(** :ref:`RID<class_rid>` body, :ref:`Transform2D<class_transform2d>` from, :ref:`Vector2<class_vector2>` motion, :ref:`bool<class_bool>` infinite_inertia, :ref:`float<class_float>` margin=0.08, :ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` result=null **)** |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`capsule_shape_create<class_Physics2DServer_capsule_shape_create>` **(** **)**                                                                                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`circle_shape_create<class_Physics2DServer_circle_shape_create>` **(** **)**                                                                                                                                                                                                                                                                        |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`concave_polygon_shape_create<class_Physics2DServer_concave_polygon_shape_create>` **(** **)**                                                                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`convex_polygon_shape_create<class_Physics2DServer_convex_polygon_shape_create>` **(** **)**                                                                                                                                                                                                                                                        |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`damped_spring_joint_create<class_Physics2DServer_damped_spring_joint_create>` **(** :ref:`Vector2<class_vector2>` anchor_a, :ref:`Vector2<class_vector2>` anchor_b, :ref:`RID<class_rid>` body_a, :ref:`RID<class_rid>` body_b **)**                                                                                                               |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                          | :ref:`damped_string_joint_get_param<class_Physics2DServer_damped_string_joint_get_param>` **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param **)** const                                                                                                                                                                                     |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`damped_string_joint_set_param<class_Physics2DServer_damped_string_joint_set_param>` **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**                                                                                                                                                          |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`free_rid<class_Physics2DServer_free_rid>` **(** :ref:`RID<class_rid>` rid **)**                                                                                                                                                                                                                                                                    |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`get_process_info<class_Physics2DServer_get_process_info>` **(** :ref:`int<class_int>` process_info **)**                                                                                                                                                                                                                                           |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`groove_joint_create<class_Physics2DServer_groove_joint_create>` **(** :ref:`Vector2<class_vector2>` groove1_a, :ref:`Vector2<class_vector2>` groove2_a, :ref:`Vector2<class_vector2>` anchor_b, :ref:`RID<class_rid>` body_a, :ref:`RID<class_rid>` body_b **)**                                                                                   |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                          | :ref:`joint_get_param<class_Physics2DServer_joint_get_param>` **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param **)** const                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`joint_get_type<class_Physics2DServer_joint_get_type>` **(** :ref:`RID<class_rid>` joint **)** const                                                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`joint_set_param<class_Physics2DServer_joint_set_param>` **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`line_shape_create<class_Physics2DServer_line_shape_create>` **(** **)**                                                                                                                                                                                                                                                                            |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`pin_joint_create<class_Physics2DServer_pin_joint_create>` **(** :ref:`Vector2<class_vector2>` anchor, :ref:`RID<class_rid>` body_a, :ref:`RID<class_rid>` body_b **)**                                                                                                                                                                             |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`ray_shape_create<class_Physics2DServer_ray_shape_create>` **(** **)**                                                                                                                                                                                                                                                                              |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`rectangle_shape_create<class_Physics2DServer_rectangle_shape_create>` **(** **)**                                                                                                                                                                                                                                                                  |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`segment_shape_create<class_Physics2DServer_segment_shape_create>` **(** **)**                                                                                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`set_active<class_Physics2DServer_set_active>` **(** :ref:`bool<class_bool>` active **)**                                                                                                                                                                                                                                                           |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_variant>`                                      | :ref:`shape_get_data<class_Physics2DServer_shape_get_data>` **(** :ref:`RID<class_rid>` shape **)** const                                                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                              | :ref:`shape_get_type<class_Physics2DServer_shape_get_type>` **(** :ref:`RID<class_rid>` shape **)** const                                                                                                                                                                                                                                                |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`shape_set_data<class_Physics2DServer_shape_set_data>` **(** :ref:`RID<class_rid>` shape, :ref:`Variant<class_variant>` data **)**                                                                                                                                                                                                                  |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_rid>`                                              | :ref:`space_create<class_Physics2DServer_space_create>` **(** **)**                                                                                                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Physics2DDirectSpaceState<class_physics2ddirectspacestate>`  | :ref:`space_get_direct_state<class_Physics2DServer_space_get_direct_state>` **(** :ref:`RID<class_rid>` space **)**                                                                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                          | :ref:`space_get_param<class_Physics2DServer_space_get_param>` **(** :ref:`RID<class_rid>` space, :ref:`int<class_int>` param **)** const                                                                                                                                                                                                                 |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                            | :ref:`space_is_active<class_Physics2DServer_space_is_active>` **(** :ref:`RID<class_rid>` space **)** const                                                                                                                                                                                                                                              |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`space_set_active<class_Physics2DServer_space_set_active>` **(** :ref:`RID<class_rid>` space, :ref:`bool<class_bool>` active **)**                                                                                                                                                                                                                  |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                               | :ref:`space_set_param<class_Physics2DServer_space_set_param>` **(** :ref:`RID<class_rid>` space, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**                                                                                                                                                                                      |
+--------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enums
-----

  .. _enum_Physics2DServer_CCDMode:

enum **CCDMode**

- **CCD_MODE_DISABLED** = **0** --- Disables continuous collision detection. This is the fastest way to detect body collisions, but can miss small, fast-moving objects.
- **CCD_MODE_CAST_RAY** = **1** --- Enables continuous collision detection by raycasting. It is faster than shapecasting, but less precise.
- **CCD_MODE_CAST_SHAPE** = **2** --- Enables continuous collision detection by shapecasting. It is the slowest CCD method, and the most precise.

  .. _enum_Physics2DServer_BodyState:

enum **BodyState**

- **BODY_STATE_TRANSFORM** = **0** --- Constant to set/get the current transform matrix of the body.
- **BODY_STATE_LINEAR_VELOCITY** = **1** --- Constant to set/get the current linear velocity of the body.
- **BODY_STATE_ANGULAR_VELOCITY** = **2** --- Constant to set/get the current angular velocity of the body.
- **BODY_STATE_SLEEPING** = **3** --- Constant to sleep/wake up a body, or to get whether it is sleeping.
- **BODY_STATE_CAN_SLEEP** = **4** --- Constant to set/get whether the body can sleep.

  .. _enum_Physics2DServer_ProcessInfo:

enum **ProcessInfo**

- **INFO_ACTIVE_OBJECTS** = **0** --- Constant to get the number of objects that are not sleeping.
- **INFO_COLLISION_PAIRS** = **1** --- Constant to get the number of possible collisions.
- **INFO_ISLAND_COUNT** = **2** --- Constant to get the number of space regions where a collision could occur.

  .. _enum_Physics2DServer_JointParam:

enum **JointParam**

- **JOINT_PARAM_BIAS** = **0**
- **JOINT_PARAM_MAX_BIAS** = **1**
- **JOINT_PARAM_MAX_FORCE** = **2**

  .. _enum_Physics2DServer_ShapeType:

enum **ShapeType**

- **SHAPE_LINE** = **0** --- This is the constant for creating line shapes. A line shape is an infinite line with an origin point, and a normal. Thus, it can be used for front/behind checks.
- **SHAPE_RAY** = **1**
- **SHAPE_SEGMENT** = **2** --- This is the constant for creating segment shapes. A segment shape is a line from a point A to a point B. It can be checked for intersections.
- **SHAPE_CIRCLE** = **3** --- This is the constant for creating circle shapes. A circle shape only has a radius. It can be used for intersections and inside/outside checks.
- **SHAPE_RECTANGLE** = **4** --- This is the constant for creating rectangle shapes. A rectangle shape is defined by a width and a height. It can be used for intersections and inside/outside checks.
- **SHAPE_CAPSULE** = **5** --- This is the constant for creating capsule shapes. A capsule shape is defined by a radius and a length. It can be used for intersections and inside/outside checks.
- **SHAPE_CONVEX_POLYGON** = **6** --- This is the constant for creating convex polygon shapes. A polygon is defined by a list of points. It can be used for intersections and inside/outside checks. Unlike the method :ref:`CollisionPolygon2D.set_polygon<class_CollisionPolygon2D_set_polygon>`, polygons modified with :ref:`shape_set_data<class_Physics2DServer_shape_set_data>` do not verify that the points supplied form is a convex polygon.
- **SHAPE_CONCAVE_POLYGON** = **7** --- This is the constant for creating concave polygon shapes. A polygon is defined by a list of points. It can be used for intersections checks, but not for inside/outside checks.
- **SHAPE_CUSTOM** = **8** --- This constant is used internally by the engine. Any attempt to create this kind of shape results in an error.

  .. _enum_Physics2DServer_AreaParameter:

enum **AreaParameter**

- **AREA_PARAM_GRAVITY** = **0** --- Constant to set/get gravity strength in an area.
- **AREA_PARAM_GRAVITY_VECTOR** = **1** --- Constant to set/get gravity vector/center in an area.
- **AREA_PARAM_GRAVITY_IS_POINT** = **2** --- Constant to set/get whether the gravity vector of an area is a direction, or a center point.
- **AREA_PARAM_GRAVITY_DISTANCE_SCALE** = **3** --- Constant to set/get the falloff factor for point gravity of an area. The greater this value is, the faster the strength of gravity decreases with the square of distance.
- **AREA_PARAM_GRAVITY_POINT_ATTENUATION** = **4** --- This constant was used to set/get the falloff factor for point gravity. It has been superseded by AREA_PARAM_GRAVITY_DISTANCE_SCALE.
- **AREA_PARAM_LINEAR_DAMP** = **5** --- Constant to set/get the linear dampening factor of an area.
- **AREA_PARAM_ANGULAR_DAMP** = **6** --- Constant to set/get the angular dampening factor of an area.
- **AREA_PARAM_PRIORITY** = **7** --- Constant to set/get the priority (order of processing) of an area.

  .. _enum_Physics2DServer_AreaBodyStatus:

enum **AreaBodyStatus**

- **AREA_BODY_ADDED** = **0** --- The value of the first parameter and area callback function receives, when an object enters one of its shapes.
- **AREA_BODY_REMOVED** = **1** --- The value of the first parameter and area callback function receives, when an object exits one of its shapes.

  .. _enum_Physics2DServer_BodyParameter:

enum **BodyParameter**

- **BODY_PARAM_BOUNCE** = **0** --- Constant to set/get a body's bounce factor.
- **BODY_PARAM_FRICTION** = **1** --- Constant to set/get a body's friction.
- **BODY_PARAM_MASS** = **2** --- Constant to set/get a body's mass.
- **BODY_PARAM_INERTIA** = **3** --- Constant to set/get a body's inertia.
- **BODY_PARAM_GRAVITY_SCALE** = **4** --- Constant to set/get a body's gravity multiplier.
- **BODY_PARAM_LINEAR_DAMP** = **5** --- Constant to set/get a body's linear dampening factor.
- **BODY_PARAM_ANGULAR_DAMP** = **6** --- Constant to set/get a body's angular dampening factor.
- **BODY_PARAM_MAX** = **7** --- This is the last ID for body parameters. Any attempt to set this property is ignored. Any attempt to get it returns 0.

  .. _enum_Physics2DServer_BodyMode:

enum **BodyMode**

- **BODY_MODE_STATIC** = **0** --- Constant for static bodies.
- **BODY_MODE_KINEMATIC** = **1** --- Constant for kinematic bodies.
- **BODY_MODE_RIGID** = **2** --- Constant for rigid bodies.
- **BODY_MODE_CHARACTER** = **3** --- Constant for rigid bodies in character mode. In this mode, a body can not rotate, and only its linear velocity is affected by physics.

  .. _enum_Physics2DServer_DampedStringParam:

enum **DampedStringParam**

- **DAMPED_STRING_REST_LENGTH** = **0** --- Set the resting length of the spring joint. The joint will always try to go to back this length when pulled apart.
- **DAMPED_STRING_STIFFNESS** = **1** --- Set the stiffness of the spring joint. The joint applies a force equal to the stiffness times the distance from its resting length.
- **DAMPED_STRING_DAMPING** = **2** --- Set the damping ratio of the spring joint. A value of 0 indicates an undamped spring, while 1 causes the system to reach equilibrium as fast as possible (critical damping).

  .. _enum_Physics2DServer_SpaceParameter:

enum **SpaceParameter**

- **SPACE_PARAM_CONTACT_RECYCLE_RADIUS** = **0** --- Constant to set/get the maximum distance a pair of bodies has to move before their collision status has to be recalculated.
- **SPACE_PARAM_CONTACT_MAX_SEPARATION** = **1** --- Constant to set/get the maximum distance a shape can be from another before they are considered separated.
- **SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION** = **2** --- Constant to set/get the maximum distance a shape can penetrate another shape before it is considered a collision.
- **SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD** = **3** --- Constant to set/get the threshold linear velocity of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after the time given.
- **SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD** = **4** --- Constant to set/get the threshold angular velocity of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after the time given.
- **SPACE_PARAM_BODY_TIME_TO_SLEEP** = **5** --- Constant to set/get the maximum time of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after this time.
- **SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS** = **6** --- Constant to set/get the default solver bias for all physics constraints. A solver bias is a factor controlling how much two objects "rebound", after violating a constraint, to avoid leaving them in that state because of numerical imprecision.

  .. _enum_Physics2DServer_AreaSpaceOverrideMode:

enum **AreaSpaceOverrideMode**

- **AREA_SPACE_OVERRIDE_DISABLED** = **0** --- This area does not affect gravity/damp. These are generally areas that exist only to detect collisions, and objects entering or exiting them.
- **AREA_SPACE_OVERRIDE_COMBINE** = **1** --- This area adds its gravity/damp values to whatever has been calculated so far. This way, many overlapping areas can combine their physics to make interesting effects.
- **AREA_SPACE_OVERRIDE_COMBINE_REPLACE** = **2** --- This area adds its gravity/damp values to whatever has been calculated so far. Then stops taking into account the rest of the areas, even the default one.
- **AREA_SPACE_OVERRIDE_REPLACE** = **3** --- This area replaces any gravity/damp, even the default one, and stops taking into account the rest of the areas.
- **AREA_SPACE_OVERRIDE_REPLACE_COMBINE** = **4** --- This area replaces any gravity/damp calculated so far, but keeps calculating the rest of the areas, down to the default one.

  .. _enum_Physics2DServer_JointType:

enum **JointType**

- **JOINT_PIN** = **0** --- Constant to create pin joints.
- **JOINT_GROOVE** = **1** --- Constant to create groove joints.
- **JOINT_DAMPED_SPRING** = **2** --- Constant to create damped spring joints.


Description
-----------

Physics 2D Server is the server responsible for all 2D physics. It can create many kinds of physics objects, but does not insert them on the node tree.

Member Function Description
---------------------------

.. _class_Physics2DServer_area_add_shape:

- void **area_add_shape** **(** :ref:`RID<class_rid>` area, :ref:`RID<class_rid>` shape, :ref:`Transform2D<class_transform2d>` transform=Transform2D( 1, 0, 0, 1, 0, 0 ) **)**

Adds a shape to the area, along with a transform matrix. Shapes are usually referenced by their index, so you should track which shape has a given index.

.. _class_Physics2DServer_area_attach_object_instance_id:

- void **area_attach_object_instance_id** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` id **)**

Assigns the area to a descendant of :ref:`Object<class_object>`, so it can exist in the node tree.

.. _class_Physics2DServer_area_clear_shapes:

- void **area_clear_shapes** **(** :ref:`RID<class_rid>` area **)**

Removes all shapes from an area. It does not delete the shapes, so they can be reassigned later.

.. _class_Physics2DServer_area_create:

- :ref:`RID<class_rid>` **area_create** **(** **)**

Creates an :ref:`Area2D<class_area2d>`.

.. _class_Physics2DServer_area_get_object_instance_id:

- :ref:`int<class_int>` **area_get_object_instance_id** **(** :ref:`RID<class_rid>` area **)** const

Gets the instance ID of the object the area is assigned to.

.. _class_Physics2DServer_area_get_param:

- :ref:`Variant<class_variant>` **area_get_param** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` param **)** const

Returns an area parameter value. A list of available parameters is on the AREA_PARAM\_\* constants.

.. _class_Physics2DServer_area_get_shape:

- :ref:`RID<class_rid>` **area_get_shape** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx **)** const

Returns the :ref:`RID<class_rid>` of the nth shape of an area.

.. _class_Physics2DServer_area_get_shape_count:

- :ref:`int<class_int>` **area_get_shape_count** **(** :ref:`RID<class_rid>` area **)** const

Returns the number of shapes assigned to an area.

.. _class_Physics2DServer_area_get_shape_transform:

- :ref:`Transform2D<class_transform2d>` **area_get_shape_transform** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx **)** const

Returns the transform matrix of a shape within an area.

.. _class_Physics2DServer_area_get_space:

- :ref:`RID<class_rid>` **area_get_space** **(** :ref:`RID<class_rid>` area **)** const

Returns the space assigned to the area.

.. _class_Physics2DServer_area_get_space_override_mode:

- :ref:`int<class_int>` **area_get_space_override_mode** **(** :ref:`RID<class_rid>` area **)** const

Returns the space override mode for the area.

.. _class_Physics2DServer_area_get_transform:

- :ref:`Transform2D<class_transform2d>` **area_get_transform** **(** :ref:`RID<class_rid>` area **)** const

Returns the transform matrix for an area.

.. _class_Physics2DServer_area_remove_shape:

- void **area_remove_shape** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx **)**

Removes a shape from an area. It does not delete the shape, so it can be reassigned later.

.. _class_Physics2DServer_area_set_collision_layer:

- void **area_set_collision_layer** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` layer **)**

Assigns the area to one or many physics layers.

.. _class_Physics2DServer_area_set_collision_mask:

- void **area_set_collision_mask** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` mask **)**

Sets which physics layers the area will monitor.

.. _class_Physics2DServer_area_set_monitor_callback:

- void **area_set_monitor_callback** **(** :ref:`RID<class_rid>` area, :ref:`Object<class_object>` receiver, :ref:`String<class_string>` method **)**

Sets the function to call when any body/area enters or exits the area. This callback will be called for any object interacting with the area, and takes five parameters:

1: AREA_BODY_ADDED or AREA_BODY_REMOVED, depending on whether the object entered or exited the area.

2: :ref:`RID<class_rid>` of the object that entered/exited the area.

3: Instance ID of the object that entered/exited the area.

4: The shape index of the object that entered/exited the area.

5: The shape index of the area where the object entered/exited.

.. _class_Physics2DServer_area_set_param:

- void **area_set_param** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` param, :ref:`Variant<class_variant>` value **)**

Sets the value for an area parameter. A list of available parameters is on the AREA_PARAM\_\* constants.

.. _class_Physics2DServer_area_set_shape:

- void **area_set_shape** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx, :ref:`RID<class_rid>` shape **)**

Substitutes a given area shape by another. The old shape is selected by its index, the new one by its :ref:`RID<class_rid>`.

.. _class_Physics2DServer_area_set_shape_disabled:

- void **area_set_shape_disabled** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disable **)**

Disables a given shape in an area.

.. _class_Physics2DServer_area_set_shape_transform:

- void **area_set_shape_transform** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_transform2d>` transform **)**

Sets the transform matrix for an area shape.

.. _class_Physics2DServer_area_set_space:

- void **area_set_space** **(** :ref:`RID<class_rid>` area, :ref:`RID<class_rid>` space **)**

Assigns a space to the area.

.. _class_Physics2DServer_area_set_space_override_mode:

- void **area_set_space_override_mode** **(** :ref:`RID<class_rid>` area, :ref:`int<class_int>` mode **)**

Sets the space override mode for the area. The modes are described in the constants AREA_SPACE_OVERRIDE\_\*.

.. _class_Physics2DServer_area_set_transform:

- void **area_set_transform** **(** :ref:`RID<class_rid>` area, :ref:`Transform2D<class_transform2d>` transform **)**

Sets the transform matrix for an area.

.. _class_Physics2DServer_body_add_collision_exception:

- void **body_add_collision_exception** **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` excepted_body **)**

Adds a body to the list of bodies exempt from collisions.

.. _class_Physics2DServer_body_add_force:

- void **body_add_force** **(** :ref:`RID<class_rid>` body, :ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` force **)**

Adds a positioned force to the applied force and torque. As with :ref:`body_apply_impulse<class_Physics2DServer_body_apply_impulse>`, both the force and the offset from the body origin are in global coordinates. A force differs from an impulse in that, while the two are forces, the impulse clears itself after being applied.

.. _class_Physics2DServer_body_add_shape:

- void **body_add_shape** **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` shape, :ref:`Transform2D<class_transform2d>` transform=Transform2D( 1, 0, 0, 1, 0, 0 ) **)**

Adds a shape to the body, along with a transform matrix. Shapes are usually referenced by their index, so you should track which shape has a given index.

.. _class_Physics2DServer_body_apply_impulse:

- void **body_apply_impulse** **(** :ref:`RID<class_rid>` body, :ref:`Vector2<class_vector2>` position, :ref:`Vector2<class_vector2>` impulse **)**

Adds a positioned impulse to the applied force and torque. Both the force and the offset from the body origin are in global coordinates.

.. _class_Physics2DServer_body_attach_object_instance_id:

- void **body_attach_object_instance_id** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` id **)**

Assigns the area to a descendant of :ref:`Object<class_object>`, so it can exist in the node tree.

.. _class_Physics2DServer_body_clear_shapes:

- void **body_clear_shapes** **(** :ref:`RID<class_rid>` body **)**

Removes all shapes from a body.

.. _class_Physics2DServer_body_create:

- :ref:`RID<class_rid>` **body_create** **(** **)**

Creates a physics body. The first parameter can be any value from constants BODY_MODE\*, for the type of body created. Additionally, the body can be created in sleeping state to save processing time.

.. _class_Physics2DServer_body_get_collision_layer:

- :ref:`int<class_int>` **body_get_collision_layer** **(** :ref:`RID<class_rid>` body **)** const

Returns the physics layer or layers a body belongs to.

.. _class_Physics2DServer_body_get_collision_mask:

- :ref:`int<class_int>` **body_get_collision_mask** **(** :ref:`RID<class_rid>` body **)** const

Returns the physics layer or layers a body can collide with.

.. _class_Physics2DServer_body_get_continuous_collision_detection_mode:

- :ref:`int<class_int>` **body_get_continuous_collision_detection_mode** **(** :ref:`RID<class_rid>` body **)** const

Returns the continuous collision detection mode.

.. _class_Physics2DServer_body_get_direct_state:

- :ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>` **body_get_direct_state** **(** :ref:`RID<class_rid>` body **)**

Returns the :ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>` of the body.

.. _class_Physics2DServer_body_get_max_contacts_reported:

- :ref:`int<class_int>` **body_get_max_contacts_reported** **(** :ref:`RID<class_rid>` body **)** const

Returns the maximum contacts that can be reported. See :ref:`body_set_max_contacts_reported<class_Physics2DServer_body_set_max_contacts_reported>`.

.. _class_Physics2DServer_body_get_mode:

- :ref:`int<class_int>` **body_get_mode** **(** :ref:`RID<class_rid>` body **)** const

Returns the body mode.

.. _class_Physics2DServer_body_get_object_instance_id:

- :ref:`int<class_int>` **body_get_object_instance_id** **(** :ref:`RID<class_rid>` body **)** const

Gets the instance ID of the object the area is assigned to.

.. _class_Physics2DServer_body_get_param:

- :ref:`float<class_float>` **body_get_param** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` param **)** const

Returns the value of a body parameter. A list of available parameters is on the BODY_PARAM\_\* constants.

.. _class_Physics2DServer_body_get_shape:

- :ref:`RID<class_rid>` **body_get_shape** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)** const

Returns the :ref:`RID<class_rid>` of the nth shape of a body.

.. _class_Physics2DServer_body_get_shape_count:

- :ref:`int<class_int>` **body_get_shape_count** **(** :ref:`RID<class_rid>` body **)** const

Returns the number of shapes assigned to a body.

.. _class_Physics2DServer_body_get_shape_metadata:

- :ref:`Variant<class_variant>` **body_get_shape_metadata** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)** const

Returns the metadata of a shape of a body.

.. _class_Physics2DServer_body_get_shape_transform:

- :ref:`Transform2D<class_transform2d>` **body_get_shape_transform** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)** const

Returns the transform matrix of a body shape.

.. _class_Physics2DServer_body_get_space:

- :ref:`RID<class_rid>` **body_get_space** **(** :ref:`RID<class_rid>` body **)** const

Returns the :ref:`RID<class_rid>` of the space assigned to a body.

.. _class_Physics2DServer_body_get_state:

- :ref:`Variant<class_variant>` **body_get_state** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` state **)** const

Returns a body state.

.. _class_Physics2DServer_body_is_omitting_force_integration:

- :ref:`bool<class_bool>` **body_is_omitting_force_integration** **(** :ref:`RID<class_rid>` body **)** const

Returns whether a body uses a callback function to calculate its own physics (see :ref:`body_set_force_integration_callback<class_Physics2DServer_body_set_force_integration_callback>`).

.. _class_Physics2DServer_body_remove_collision_exception:

- void **body_remove_collision_exception** **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` excepted_body **)**

Removes a body from the list of bodies exempt from collisions.

.. _class_Physics2DServer_body_remove_shape:

- void **body_remove_shape** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx **)**

Removes a shape from a body. The shape is not deleted, so it can be reused afterwards.

.. _class_Physics2DServer_body_set_axis_velocity:

- void **body_set_axis_velocity** **(** :ref:`RID<class_rid>` body, :ref:`Vector2<class_vector2>` axis_velocity **)**

Sets an axis velocity. The velocity in the given vector axis will be set as the given vector length. This is useful for jumping behavior.

.. _class_Physics2DServer_body_set_collision_layer:

- void **body_set_collision_layer** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` layer **)**

Sets the physics layer or layers a body belongs to.

.. _class_Physics2DServer_body_set_collision_mask:

- void **body_set_collision_mask** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` mask **)**

Sets the physics layer or layers a body can collide with.

.. _class_Physics2DServer_body_set_continuous_collision_detection_mode:

- void **body_set_continuous_collision_detection_mode** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` mode **)**

Sets the continuous collision detection mode from any of the CCD_MODE\_\* constants.

Continuous collision detection tries to predict where a moving body will collide, instead of moving it and correcting its movement if it collided.

.. _class_Physics2DServer_body_set_force_integration_callback:

- void **body_set_force_integration_callback** **(** :ref:`RID<class_rid>` body, :ref:`Object<class_object>` receiver, :ref:`String<class_string>` method, :ref:`Variant<class_variant>` userdata=null **)**

Sets the function used to calculate physics for an object, if that object allows it (see :ref:`body_set_omit_force integration<class_Physics2DServer_body_set_omit_force integration>`).

.. _class_Physics2DServer_body_set_max_contacts_reported:

- void **body_set_max_contacts_reported** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` amount **)**

Sets the maximum contacts to report. Bodies can keep a log of the contacts with other bodies, this is enabled by setting the maximum amount of contacts reported to a number greater than 0.

.. _class_Physics2DServer_body_set_mode:

- void **body_set_mode** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` mode **)**

Sets the body mode, from one of the constants BODY_MODE\*.

.. _class_Physics2DServer_body_set_omit_force_integration:

- void **body_set_omit_force_integration** **(** :ref:`RID<class_rid>` body, :ref:`bool<class_bool>` enable **)**

Sets whether a body uses a callback function to calculate its own physics (see :ref:`body_set_force_integration_callback<class_Physics2DServer_body_set_force_integration_callback>`).

.. _class_Physics2DServer_body_set_param:

- void **body_set_param** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**

Sets a body parameter. A list of available parameters is on the BODY_PARAM\_\* constants.

.. _class_Physics2DServer_body_set_shape:

- void **body_set_shape** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`RID<class_rid>` shape **)**

Substitutes a given body shape by another. The old shape is selected by its index, the new one by its :ref:`RID<class_rid>`.

.. _class_Physics2DServer_body_set_shape_as_one_way_collision:

- void **body_set_shape_as_one_way_collision** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` enable **)**

Enables one way collision on body if ``enable`` is ``true``.

.. _class_Physics2DServer_body_set_shape_disabled:

- void **body_set_shape_disabled** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disable **)**

Disables shape in body if ``disable`` is ``true``.

.. _class_Physics2DServer_body_set_shape_metadata:

- void **body_set_shape_metadata** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`Variant<class_variant>` metadata **)**

Sets metadata of a shape within a body. This metadata is different from :ref:`Object.set_meta<class_Object_set_meta>`, and can be retrieved on shape queries.

.. _class_Physics2DServer_body_set_shape_transform:

- void **body_set_shape_transform** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_transform2d>` transform **)**

Sets the transform matrix for a body shape.

.. _class_Physics2DServer_body_set_space:

- void **body_set_space** **(** :ref:`RID<class_rid>` body, :ref:`RID<class_rid>` space **)**

Assigns a space to the body (see :ref:`create_space<class_Physics2DServer_create_space>`).

.. _class_Physics2DServer_body_set_state:

- void **body_set_state** **(** :ref:`RID<class_rid>` body, :ref:`int<class_int>` state, :ref:`Variant<class_variant>` value **)**

Sets a body state (see BODY_STATE\* constants).

.. _class_Physics2DServer_body_test_motion:

- :ref:`bool<class_bool>` **body_test_motion** **(** :ref:`RID<class_rid>` body, :ref:`Transform2D<class_transform2d>` from, :ref:`Vector2<class_vector2>` motion, :ref:`bool<class_bool>` infinite_inertia, :ref:`float<class_float>` margin=0.08, :ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` result=null **)**

Returns whether a body can move from a given point in a given direction. Apart from the boolean return value, a :ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` can be passed to return additional information in.

.. _class_Physics2DServer_capsule_shape_create:

- :ref:`RID<class_rid>` **capsule_shape_create** **(** **)**

.. _class_Physics2DServer_circle_shape_create:

- :ref:`RID<class_rid>` **circle_shape_create** **(** **)**

.. _class_Physics2DServer_concave_polygon_shape_create:

- :ref:`RID<class_rid>` **concave_polygon_shape_create** **(** **)**

.. _class_Physics2DServer_convex_polygon_shape_create:

- :ref:`RID<class_rid>` **convex_polygon_shape_create** **(** **)**

.. _class_Physics2DServer_damped_spring_joint_create:

- :ref:`RID<class_rid>` **damped_spring_joint_create** **(** :ref:`Vector2<class_vector2>` anchor_a, :ref:`Vector2<class_vector2>` anchor_b, :ref:`RID<class_rid>` body_a, :ref:`RID<class_rid>` body_b **)**

Creates a damped spring joint between two bodies. If not specified, the second body is assumed to be the joint itself.

.. _class_Physics2DServer_damped_string_joint_get_param:

- :ref:`float<class_float>` **damped_string_joint_get_param** **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param **)** const

Returns the value of a damped spring joint parameter.

.. _class_Physics2DServer_damped_string_joint_set_param:

- void **damped_string_joint_set_param** **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**

Sets a damped spring joint parameter. Parameters are explained in the DAMPED_STRING\* constants.

.. _class_Physics2DServer_free_rid:

- void **free_rid** **(** :ref:`RID<class_rid>` rid **)**

Destroys any of the objects created by Physics2DServer. If the :ref:`RID<class_rid>` passed is not one of the objects that can be created by Physics2DServer, an error will be sent to the console.

.. _class_Physics2DServer_get_process_info:

- :ref:`int<class_int>` **get_process_info** **(** :ref:`int<class_int>` process_info **)**

Returns information about the current state of the 2D physics engine. The states are listed under the INFO\_\* constants.

.. _class_Physics2DServer_groove_joint_create:

- :ref:`RID<class_rid>` **groove_joint_create** **(** :ref:`Vector2<class_vector2>` groove1_a, :ref:`Vector2<class_vector2>` groove2_a, :ref:`Vector2<class_vector2>` anchor_b, :ref:`RID<class_rid>` body_a, :ref:`RID<class_rid>` body_b **)**

Creates a groove joint between two bodies. If not specified, the bodyies are assumed to be the joint itself.

.. _class_Physics2DServer_joint_get_param:

- :ref:`float<class_float>` **joint_get_param** **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param **)** const

Returns the value of a joint parameter.

.. _class_Physics2DServer_joint_get_type:

- :ref:`int<class_int>` **joint_get_type** **(** :ref:`RID<class_rid>` joint **)** const

Returns the type of a joint (see JOINT\_\* constants).

.. _class_Physics2DServer_joint_set_param:

- void **joint_set_param** **(** :ref:`RID<class_rid>` joint, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**

Sets a joint parameter. Parameters are explained in the JOINT_PARAM\* constants.

.. _class_Physics2DServer_line_shape_create:

- :ref:`RID<class_rid>` **line_shape_create** **(** **)**

.. _class_Physics2DServer_pin_joint_create:

- :ref:`RID<class_rid>` **pin_joint_create** **(** :ref:`Vector2<class_vector2>` anchor, :ref:`RID<class_rid>` body_a, :ref:`RID<class_rid>` body_b **)**

Creates a pin joint between two bodies. If not specified, the second body is assumed to be the joint itself.

.. _class_Physics2DServer_ray_shape_create:

- :ref:`RID<class_rid>` **ray_shape_create** **(** **)**

.. _class_Physics2DServer_rectangle_shape_create:

- :ref:`RID<class_rid>` **rectangle_shape_create** **(** **)**

.. _class_Physics2DServer_segment_shape_create:

- :ref:`RID<class_rid>` **segment_shape_create** **(** **)**

.. _class_Physics2DServer_set_active:

- void **set_active** **(** :ref:`bool<class_bool>` active **)**

Activates or deactivates the 2D physics engine.

.. _class_Physics2DServer_shape_get_data:

- :ref:`Variant<class_variant>` **shape_get_data** **(** :ref:`RID<class_rid>` shape **)** const

Returns the shape data.

.. _class_Physics2DServer_shape_get_type:

- :ref:`int<class_int>` **shape_get_type** **(** :ref:`RID<class_rid>` shape **)** const

Returns the type of shape (see SHAPE\_\* constants).

.. _class_Physics2DServer_shape_set_data:

- void **shape_set_data** **(** :ref:`RID<class_rid>` shape, :ref:`Variant<class_variant>` data **)**

Sets the shape data that defines its shape and size. The data to be passed depends on the kind of shape created :ref:`shape_get_type<class_Physics2DServer_shape_get_type>`.

.. _class_Physics2DServer_space_create:

- :ref:`RID<class_rid>` **space_create** **(** **)**

Creates a space. A space is a collection of parameters for the physics engine that can be assigned to an area or a body. It can be assigned to an area with :ref:`area_set_space<class_Physics2DServer_area_set_space>`, or to a body with :ref:`body_set_space<class_Physics2DServer_body_set_space>`.

.. _class_Physics2DServer_space_get_direct_state:

- :ref:`Physics2DDirectSpaceState<class_physics2ddirectspacestate>` **space_get_direct_state** **(** :ref:`RID<class_rid>` space **)**

Returns the state of a space, a :ref:`Physics2DDirectSpaceState<class_physics2ddirectspacestate>`. This object can be used to make collision/intersection queries.

.. _class_Physics2DServer_space_get_param:

- :ref:`float<class_float>` **space_get_param** **(** :ref:`RID<class_rid>` space, :ref:`int<class_int>` param **)** const

Returns the value of a space parameter.

.. _class_Physics2DServer_space_is_active:

- :ref:`bool<class_bool>` **space_is_active** **(** :ref:`RID<class_rid>` space **)** const

Returns whether the space is active.

.. _class_Physics2DServer_space_set_active:

- void **space_set_active** **(** :ref:`RID<class_rid>` space, :ref:`bool<class_bool>` active **)**

Marks a space as active. It will not have an effect, unless it is assigned to an area or body.

.. _class_Physics2DServer_space_set_param:

- void **space_set_param** **(** :ref:`RID<class_rid>` space, :ref:`int<class_int>` param, :ref:`float<class_float>` value **)**

Sets the value for a space parameter. A list of available parameters is on the SPACE_PARAM\_\* constants.


