.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Spatial.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Spatial:

Spatial
=======

**Inherits:** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Inherited By:** :ref:`Joint<class_joint>`, :ref:`RayCast<class_raycast>`, :ref:`Camera<class_camera>`, :ref:`BoneAttachment<class_boneattachment>`, :ref:`CollisionShape<class_collisionshape>`, :ref:`AudioStreamPlayer3D<class_audiostreamplayer3d>`, :ref:`ARVRController<class_arvrcontroller>`, :ref:`Path<class_path>`, :ref:`VisualInstance<class_visualinstance>`, :ref:`VehicleWheel<class_vehiclewheel>`, :ref:`Position3D<class_position3d>`, :ref:`ProximityGroup<class_proximitygroup>`, :ref:`ARVRAnchor<class_arvranchor>`, :ref:`RemoteTransform<class_remotetransform>`, :ref:`CollisionObject<class_collisionobject>`, :ref:`PathFollow<class_pathfollow>`, :ref:`NavigationMeshInstance<class_navigationmeshinstance>`, :ref:`Listener<class_listener>`, :ref:`VisibilityNotifier<class_visibilitynotifier>`, :ref:`Navigation<class_navigation>`, :ref:`CollisionPolygon<class_collisionpolygon>`, :ref:`GridMap<class_gridmap>`, :ref:`Skeleton<class_skeleton>`, :ref:`ARVROrigin<class_arvrorigin>`

**Category:** Core

Brief Description
-----------------

Most basic 3D game object, parent of all 3D related nodes.

Member Functions
----------------

+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Spatial<class_spatial>`  | :ref:`get_parent_spatial<class_Spatial_get_parent_spatial>` **(** **)** const                                                                                                                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`World<class_world>`      | :ref:`get_world<class_Spatial_get_world>` **(** **)** const                                                                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`global_rotate<class_Spatial_global_rotate>` **(** :ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` angle **)**                                                            |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`global_scale<class_Spatial_global_scale>` **(** :ref:`Vector3<class_vector3>` scale **)**                                                                                              |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`global_translate<class_Spatial_global_translate>` **(** :ref:`Vector3<class_vector3>` offset **)**                                                                                     |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`hide<class_Spatial_hide>` **(** **)**                                                                                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_local_transform_notification_enabled<class_Spatial_is_local_transform_notification_enabled>` **(** **)** const                                                                      |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_set_as_toplevel<class_Spatial_is_set_as_toplevel>` **(** **)** const                                                                                                                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_transform_notification_enabled<class_Spatial_is_transform_notification_enabled>` **(** **)** const                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`        | :ref:`is_visible_in_tree<class_Spatial_is_visible_in_tree>` **(** **)** const                                                                                                                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`look_at<class_Spatial_look_at>` **(** :ref:`Vector3<class_vector3>` target, :ref:`Vector3<class_vector3>` up **)**                                                                     |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`look_at_from_position<class_Spatial_look_at_from_position>` **(** :ref:`Vector3<class_vector3>` position, :ref:`Vector3<class_vector3>` target, :ref:`Vector3<class_vector3>` up **)** |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`orthonormalize<class_Spatial_orthonormalize>` **(** **)**                                                                                                                              |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`rotate<class_Spatial_rotate>` **(** :ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` angle **)**                                                                          |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`rotate_object_local<class_Spatial_rotate_object_local>` **(** :ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` angle **)**                                                |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`rotate_x<class_Spatial_rotate_x>` **(** :ref:`float<class_float>` angle **)**                                                                                                          |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`rotate_y<class_Spatial_rotate_y>` **(** :ref:`float<class_float>` angle **)**                                                                                                          |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`rotate_z<class_Spatial_rotate_z>` **(** :ref:`float<class_float>` angle **)**                                                                                                          |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`scale_object_local<class_Spatial_scale_object_local>` **(** :ref:`Vector3<class_vector3>` scale **)**                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_as_toplevel<class_Spatial_set_as_toplevel>` **(** :ref:`bool<class_bool>` enable **)**                                                                                             |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_identity<class_Spatial_set_identity>` **(** **)**                                                                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_ignore_transform_notification<class_Spatial_set_ignore_transform_notification>` **(** :ref:`bool<class_bool>` enabled **)**                                                        |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_notify_local_transform<class_Spatial_set_notify_local_transform>` **(** :ref:`bool<class_bool>` enable **)**                                                                       |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`set_notify_transform<class_Spatial_set_notify_transform>` **(** :ref:`bool<class_bool>` enable **)**                                                                                   |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`show<class_Spatial_show>` **(** **)**                                                                                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`  | :ref:`to_global<class_Spatial_to_global>` **(** :ref:`Vector3<class_vector3>` local_point **)** const                                                                                        |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`  | :ref:`to_local<class_Spatial_to_local>` **(** :ref:`Vector3<class_vector3>` global_point **)** const                                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`translate<class_Spatial_translate>` **(** :ref:`Vector3<class_vector3>` offset **)**                                                                                                   |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`translate_object_local<class_Spatial_translate_object_local>` **(** :ref:`Vector3<class_vector3>` offset **)**                                                                         |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                           | :ref:`update_gizmo<class_Spatial_update_gizmo>` **(** **)**                                                                                                                                  |
+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_Spatial_visibility_changed:

- **visibility_changed** **(** **)**

Emitted when node visibility changes.


Member Variables
----------------

  .. _class_Spatial_gizmo:

- :ref:`SpatialGizmo<class_spatialgizmo>` **gizmo** - The SpatialGizmo for this node. Used for example in :ref:`EditorSpatialGizmo<class_editorspatialgizmo>` as custom visualization and editing handles in Editor.

  .. _class_Spatial_global_transform:

- :ref:`Transform<class_transform>` **global_transform** - World space (global) :ref:`Transform<class_transform>` of this node.

  .. _class_Spatial_rotation:

- :ref:`Vector3<class_vector3>` **rotation** - Rotation part of the local transformation, specified in terms of YXZ-Euler angles in the format (X-angle, Y-angle, Z-angle), in radians.



Note that in the mathematical sense, rotation is a matrix and not a vector. The three Euler angles, which are the three indepdent parameters of the Euler-angle parametrization of the rotation matrix, are stored in a :ref:`Vector3<class_vector3>` data structure not because the rotation is a vector, but only because :ref:`Vector3<class_vector3>` exists as a convenient data-structure to store 3 floating point numbers. Therefore, applying affine operations on the rotation "vector" is not meaningful.

  .. _class_Spatial_rotation_degrees:

- :ref:`Vector3<class_vector3>` **rotation_degrees** - Rotation part of the local transformation, specified in terms of YXZ-Euler angles in the format (X-angle, Y-angle, Z-angle), in degrees.

  .. _class_Spatial_scale:

- :ref:`Vector3<class_vector3>` **scale** - Scale part of the local transformation.

  .. _class_Spatial_transform:

- :ref:`Transform<class_transform>` **transform** - Local space :ref:`Transform<class_transform>` of this node, with respect to the parent node.

  .. _class_Spatial_translation:

- :ref:`Vector3<class_vector3>` **translation** - Local translation of this node.

  .. _class_Spatial_visible:

- :ref:`bool<class_bool>` **visible** - Visibility of this node. Toggles if this node is rendered.


Numeric Constants
-----------------

- **NOTIFICATION_TRANSFORM_CHANGED** = **29** --- Spatial nodes receives this notification when their global transform changes. This means that either the current or a parent node changed its transform.

In order for NOTIFICATION_TRANSFORM_CHANGED to work user first needs to ask for it, with set_notify_transform(true).
- **NOTIFICATION_ENTER_WORLD** = **41** --- Spatial nodes receives this notification when they are registered to new :ref:`World<class_world>` resource.
- **NOTIFICATION_EXIT_WORLD** = **42** --- Spatial nodes receives this notification when they are unregistered from current :ref:`World<class_world>` resource.
- **NOTIFICATION_VISIBILITY_CHANGED** = **43** --- Spatial nodes receives this notification when their visibility changes.

Description
-----------

Most basic 3D game object, with a 3D :ref:`Transform<class_transform>` and visibility settings. All other 3D game objects inherit from Spatial. Use Spatial as a parent node to move, scale, rotate and show/hide children in a 3D project.



Affine operations (rotate, scale, translate) happen in parent's local coordinate system, unless the Spatial object is set as top level. Affine operations in this coordinate system correspond to direct affine operations on the Spatial's transform. The word local below refers to this coordinate system. The coordinate system that is attached to the Spatial object itself is referred to as object-local coordinate system.

Member Function Description
---------------------------

.. _class_Spatial_get_parent_spatial:

- :ref:`Spatial<class_spatial>` **get_parent_spatial** **(** **)** const

Returns the parent ``Spatial``, or an empty :ref:`Object<class_object>` if no parent exists or parent is not of type ``Spatial``.

.. _class_Spatial_get_world:

- :ref:`World<class_world>` **get_world** **(** **)** const

Returns the current :ref:`World<class_world>` resource this Spatial node is registered to.

.. _class_Spatial_global_rotate:

- void **global_rotate** **(** :ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` angle **)**

Rotates the global (world) transformation around axis, a unit :ref:`Vector3<class_vector3>`, by specified angle in radians. The rotation axis is in global coordinate system.

.. _class_Spatial_global_scale:

- void **global_scale** **(** :ref:`Vector3<class_vector3>` scale **)**

.. _class_Spatial_global_translate:

- void **global_translate** **(** :ref:`Vector3<class_vector3>` offset **)**

Moves the global (world) transformation by :ref:`Vector3<class_vector3>` offset. The offset is in global coordinate system.

.. _class_Spatial_hide:

- void **hide** **(** **)**

Disables rendering of this node. Change Spatial Visible property to false.

.. _class_Spatial_is_local_transform_notification_enabled:

- :ref:`bool<class_bool>` **is_local_transform_notification_enabled** **(** **)** const

Returns whether node notifies about its local transformation changes. Spatial will not propagate this by default.

.. _class_Spatial_is_set_as_toplevel:

- :ref:`bool<class_bool>` **is_set_as_toplevel** **(** **)** const

Returns whether this node is set as Toplevel, that is whether it ignores its parent nodes transformations.

.. _class_Spatial_is_transform_notification_enabled:

- :ref:`bool<class_bool>` **is_transform_notification_enabled** **(** **)** const

Returns whether the node notifies about its global and local transformation changes. Spatial will not propagate this by default.

.. _class_Spatial_is_visible_in_tree:

- :ref:`bool<class_bool>` **is_visible_in_tree** **(** **)** const

Returns whether the node is visible, taking into consideration that its parents visibility.

.. _class_Spatial_look_at:

- void **look_at** **(** :ref:`Vector3<class_vector3>` target, :ref:`Vector3<class_vector3>` up **)**

Rotates itself to point into direction of target position. Operations take place in global space.

.. _class_Spatial_look_at_from_position:

- void **look_at_from_position** **(** :ref:`Vector3<class_vector3>` position, :ref:`Vector3<class_vector3>` target, :ref:`Vector3<class_vector3>` up **)**

Moves the node to specified position and then rotates itself to point into direction of target position. Operations take place in global space.

.. _class_Spatial_orthonormalize:

- void **orthonormalize** **(** **)**

Resets this node's transformations (like scale, skew and taper) preserving its rotation and translation by performing Gram-Schmidt orthonormalization on this node's Transform3D.

.. _class_Spatial_rotate:

- void **rotate** **(** :ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` angle **)**

Rotates the local transformation around axis, a unit :ref:`Vector3<class_vector3>`, by specified angle in radians.

.. _class_Spatial_rotate_object_local:

- void **rotate_object_local** **(** :ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` angle **)**

Rotates the local transformation around axis, a unit :ref:`Vector3<class_vector3>`, by specified angle in radians. The rotation axis is in object-local coordinate system.

.. _class_Spatial_rotate_x:

- void **rotate_x** **(** :ref:`float<class_float>` angle **)**

Rotates the local transformation around the X axis by angle in radians

.. _class_Spatial_rotate_y:

- void **rotate_y** **(** :ref:`float<class_float>` angle **)**

Rotates the local transformation around the Y axis by angle in radians.

.. _class_Spatial_rotate_z:

- void **rotate_z** **(** :ref:`float<class_float>` angle **)**

Rotates the local transformation around the Z axis by angle in radians.

.. _class_Spatial_scale_object_local:

- void **scale_object_local** **(** :ref:`Vector3<class_vector3>` scale **)**

Scales the local transformation by given 3D scale factors in object-local coordinate system.

.. _class_Spatial_set_as_toplevel:

- void **set_as_toplevel** **(** :ref:`bool<class_bool>` enable **)**

Makes the node ignore its parents transformations. Node transformations are only in global space.

.. _class_Spatial_set_identity:

- void **set_identity** **(** **)**

Reset all transformations for this node. Set its Transform3D to identity matrix.

.. _class_Spatial_set_ignore_transform_notification:

- void **set_ignore_transform_notification** **(** :ref:`bool<class_bool>` enabled **)**

Set whether the node ignores notification that its transformation (global or local) changed.

.. _class_Spatial_set_notify_local_transform:

- void **set_notify_local_transform** **(** :ref:`bool<class_bool>` enable **)**

Set whether the node notifies about its local transformation changes. Spatial will not propagate this by default.

.. _class_Spatial_set_notify_transform:

- void **set_notify_transform** **(** :ref:`bool<class_bool>` enable **)**

Set whether the node notifies about its global and local transformation changes. Spatial will not propagate this by default.

.. _class_Spatial_show:

- void **show** **(** **)**

Enables rendering of this node. Change Spatial Visible property to "True".

.. _class_Spatial_to_global:

- :ref:`Vector3<class_vector3>` **to_global** **(** :ref:`Vector3<class_vector3>` local_point **)** const

Transforms :ref:`Vector3<class_vector3>` "local_point" from this node's local space to world space.

.. _class_Spatial_to_local:

- :ref:`Vector3<class_vector3>` **to_local** **(** :ref:`Vector3<class_vector3>` global_point **)** const

Transforms :ref:`Vector3<class_vector3>` "global_point" from world space to this node's local space.

.. _class_Spatial_translate:

- void **translate** **(** :ref:`Vector3<class_vector3>` offset **)**

Changes the node's position by given offset :ref:`Vector3<class_vector3>`.

.. _class_Spatial_translate_object_local:

- void **translate_object_local** **(** :ref:`Vector3<class_vector3>` offset **)**

.. _class_Spatial_update_gizmo:

- void **update_gizmo** **(** **)**

Updates the :ref:`SpatialGizmo<class_spatialgizmo>` of this node.


