.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ShortCut.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ShortCut:

ShortCut
========

**Inherits:** :ref:`Resource<class_resource>` **<** :ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

A shortcut for binding input.

Member Functions
----------------

+------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`  | :ref:`get_as_text<class_ShortCut_get_as_text>` **(** **)** const                                           |
+------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`is_shortcut<class_ShortCut_is_shortcut>` **(** :ref:`InputEvent<class_inputevent>` event **)** const |
+------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`is_valid<class_ShortCut_is_valid>` **(** **)** const                                                 |
+------------------------------+------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_ShortCut_shortcut:

- :ref:`InputEvent<class_inputevent>` **shortcut** - The Shortcut's :ref:`InputEvent<class_inputevent>`.

Generally the :ref:`InputEvent<class_inputevent>` is a keyboard key, though it can be any :ref:`InputEvent<class_inputevent>`.


Description
-----------

A shortcut for binding input.

Shortcuts are commonly used for interacting with a :ref:`Control<class_control>` element from a :ref:`InputEvent<class_inputevent>`.

Member Function Description
---------------------------

.. _class_ShortCut_get_as_text:

- :ref:`String<class_string>` **get_as_text** **(** **)** const

Returns the Shortcut's :ref:`InputEvent<class_inputevent>` as a :ref:`String<class_string>`.

.. _class_ShortCut_is_shortcut:

- :ref:`bool<class_bool>` **is_shortcut** **(** :ref:`InputEvent<class_inputevent>` event **)** const

Returns ``true`` if the Shortcut's :ref:`InputEvent<class_inputevent>` equals ``event``.

.. _class_ShortCut_is_valid:

- :ref:`bool<class_bool>` **is_valid** **(** **)** const

If ``true`` this Shortcut is valid.


