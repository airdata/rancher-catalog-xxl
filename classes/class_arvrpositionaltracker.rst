.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ARVRPositionalTracker.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ARVRPositionalTracker:

ARVRPositionalTracker
=====================

**Inherits:** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

A tracked object

Member Functions
----------------

+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`              | :ref:`get_hand<class_ARVRPositionalTracker_get_hand>` **(** **)** const                                                             |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`              | :ref:`get_joy_id<class_ARVRPositionalTracker_get_joy_id>` **(** **)** const                                                         |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`        | :ref:`get_name<class_ARVRPositionalTracker_get_name>` **(** **)** const                                                             |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Basis<class_basis>`          | :ref:`get_orientation<class_ARVRPositionalTracker_get_orientation>` **(** **)** const                                               |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_vector3>`      | :ref:`get_position<class_ARVRPositionalTracker_get_position>` **(** **)** const                                                     |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`            | :ref:`get_tracks_orientation<class_ARVRPositionalTracker_get_tracks_orientation>` **(** **)** const                                 |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`            | :ref:`get_tracks_position<class_ARVRPositionalTracker_get_tracks_position>` **(** **)** const                                       |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform<class_transform>`  | :ref:`get_transform<class_ARVRPositionalTracker_get_transform>` **(** :ref:`bool<class_bool>` adjust_by_reference_frame **)** const |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`              | :ref:`get_type<class_ARVRPositionalTracker_get_type>` **(** **)** const                                                             |
+------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_ARVRPositionalTracker_rumble:

- :ref:`float<class_float>` **rumble** - The degree to which the tracker rumbles. Ranges from ``0.0`` to ``1.0`` with precision ``.01``.


Enums
-----

  .. _enum_ARVRPositionalTracker_TrackerHand:

enum **TrackerHand**

- **TRACKER_HAND_UNKNOWN** = **0** --- The hand this tracker is held in is unknown or not applicable.
- **TRACKER_LEFT_HAND** = **1** --- This tracker is the left hand controller.
- **TRACKER_RIGHT_HAND** = **2** --- This tracker is the right hand controller.


Description
-----------

An instance of this object represents a device that is tracked such as a controller or anchor point. HMDs aren't represented here as they are fully handled internally.

As controllers are turned on and the AR/VR interface detects them instances of this object are automatically added to this list of active tracking objects accessible through the ARVRServer

The ARVRController and ARVRAnchor both consume objects of this type and should be the objects you use in game. The positional trackers are just the under the hood objects that make this all work and are mostly exposed so GDNative based interfaces can interact with them.

Member Function Description
---------------------------

.. _class_ARVRPositionalTracker_get_hand:

- :ref:`int<class_int>` **get_hand** **(** **)** const

Returns the hand holding this tracker, if known. See TRACKER\_\* constants.

.. _class_ARVRPositionalTracker_get_joy_id:

- :ref:`int<class_int>` **get_joy_id** **(** **)** const

If this is a controller that is being tracked the controller will also be represented by a joystick entry with this id.

.. _class_ARVRPositionalTracker_get_name:

- :ref:`String<class_string>` **get_name** **(** **)** const

Returns the controller or anchor point's name if available.

.. _class_ARVRPositionalTracker_get_orientation:

- :ref:`Basis<class_basis>` **get_orientation** **(** **)** const

Returns the controller's orientation matrix.

.. _class_ARVRPositionalTracker_get_position:

- :ref:`Vector3<class_vector3>` **get_position** **(** **)** const

Returns the world-space controller position.

.. _class_ARVRPositionalTracker_get_tracks_orientation:

- :ref:`bool<class_bool>` **get_tracks_orientation** **(** **)** const

Returns ``true`` if this device tracks orientation.

.. _class_ARVRPositionalTracker_get_tracks_position:

- :ref:`bool<class_bool>` **get_tracks_position** **(** **)** const

Returns ``true`` if this device tracks position.

.. _class_ARVRPositionalTracker_get_transform:

- :ref:`Transform<class_transform>` **get_transform** **(** :ref:`bool<class_bool>` adjust_by_reference_frame **)** const

Returns the transform combining this device's orientation and position.

.. _class_ARVRPositionalTracker_get_type:

- :ref:`int<class_int>` **get_type** **(** **)** const

Returns the tracker's type.


