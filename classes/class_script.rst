.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Script.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Script:

Script
======

**Inherits:** :ref:`Resource<class_resource>` **<** :ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`

**Inherited By:** :ref:`VisualScript<class_visualscript>`, :ref:`GDScript<class_gdscript>`, :ref:`CSharpScript<class_csharpscript>`, :ref:`NativeScript<class_nativescript>`, :ref:`PluginScript<class_pluginscript>`

**Category:** Core

Brief Description
-----------------

A class stored as a resource.

Member Functions
----------------

+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`can_instance<class_Script_can_instance>` **(** **)** const                                                   |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`Script<class_script>`  | :ref:`get_base_script<class_Script_get_base_script>` **(** **)** const                                             |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_string>`  | :ref:`get_instance_base_type<class_Script_get_instance_base_type>` **(** **)** const                               |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`has_script_signal<class_Script_has_script_signal>` **(** :ref:`String<class_string>` signal_name **)** const |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`has_source_code<class_Script_has_source_code>` **(** **)** const                                             |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`instance_has<class_Script_instance_has>` **(** :ref:`Object<class_object>` base_object **)** const           |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`      | :ref:`is_tool<class_Script_is_tool>` **(** **)** const                                                             |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`        | :ref:`reload<class_Script_reload>` **(** :ref:`bool<class_bool>` keep_state=false **)**                            |
+------------------------------+--------------------------------------------------------------------------------------------------------------------+

Member Variables
----------------

  .. _class_Script_source_code:

- :ref:`String<class_string>` **source_code** - The script source code, or an empty string if source code is not available. When set, does not reload the class implementation automatically.


Description
-----------

A class stored as a resource. The script exends the functionality of all objects that instance it.

The 'new' method of a script subclass creates a new instance. :ref:`Object.set_script<class_Object_set_script>` extends an existing object, if that object's class matches one of the script's base classes.

Member Function Description
---------------------------

.. _class_Script_can_instance:

- :ref:`bool<class_bool>` **can_instance** **(** **)** const

Returns true if the script can be instanced.

.. _class_Script_get_base_script:

- :ref:`Script<class_script>` **get_base_script** **(** **)** const

.. _class_Script_get_instance_base_type:

- :ref:`String<class_string>` **get_instance_base_type** **(** **)** const

.. _class_Script_has_script_signal:

- :ref:`bool<class_bool>` **has_script_signal** **(** :ref:`String<class_string>` signal_name **)** const

Returns true if the script, or a base class, defines a signal with the given name.

.. _class_Script_has_source_code:

- :ref:`bool<class_bool>` **has_source_code** **(** **)** const

Returns true if the script contains non-empty source code.

.. _class_Script_instance_has:

- :ref:`bool<class_bool>` **instance_has** **(** :ref:`Object<class_object>` base_object **)** const

Returns true if 'base_object' is an instance of this script.

.. _class_Script_is_tool:

- :ref:`bool<class_bool>` **is_tool** **(** **)** const

Returns true if the script is a tool script. A tool script can run in the editor.

.. _class_Script_reload:

- :ref:`int<class_int>` **reload** **(** :ref:`bool<class_bool>` keep_state=false **)**

Reloads the script's class implementation. Returns an error code.


